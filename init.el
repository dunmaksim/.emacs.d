;;; init.el --- Dunaevsky Maxim GNU EMACS config -*- lexical-binding: t; -*-
;;; Commentary:
;;; –ù–∞—Å—Ç—Ä–æ–π–∫–∏ EMACS –¥–ª—è —Ä–∞–±–æ—Ç—ã —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–º –ø–∏—Å–∞—Ç–µ–ª–µ–º.

;;; Code:

(defalias 'yes-or-no-p 'y-or-n-p) ;; –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å y –∏ n –≤–º–µ—Å—Ç–æ yes –∏ no (—Å–æ–∫—Ä–∞—â–∞–µ—Ç –æ–±—ä—ë–º –≤–≤–æ–¥–∏–º–æ–≥–æ —Ç–µ–∫—Å—Ç–∞ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥)

(defun emacs-version-not-less-than (major minor)
  "True when Emacs version is not less than MAJOR MINOR version."
  (or
   (> emacs-major-version major)
   (and (= emacs-major-version major)
        (>= emacs-minor-version minor))))

(defconst init-el-font-height 16 "–†–∞–∑–º–µ—Ä —à—Ä–∏—Ñ—Ç–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é.")

(require 'custom)
(customize-set-variable
 'custom-file
 (expand-file-name
  (convert-standard-filename "custom.el")
  user-emacs-directory)
 "–§–∞–π–ª –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫, —Å–¥–µ–ª–∞–Ω–Ω—ã—Ö –≤ customize.")

(require 'derived) ;; derived-mode-hook-name

;;; –ó–¥–µ—Å—å –Ω–∞—Ö–æ–¥—è—Ç—Å—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–∞–∑–æ–≤–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ Emacs.
;;; –î–∞–∂–µ –µ—Å–ª–∏ –±—É–¥—É—Ç –∫–∞–∫–∏–µ-—Ç–æ –ø—Ä–æ–±–ª–µ–º—ã —Å–æ —Å—Ç–æ—Ä–æ–Ω–Ω–∏–º–∏ –ø–∞–∫–µ—Ç–∞–º–∏, —ç—Ç–æ—Ç –∫–æ–¥ –≤—Å—ë
;;; —Ä–∞–≤–Ω–æ –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω.
;;; –ü–æ —ç—Ç–æ–π –∂–µ –ø—Ä–∏—á–∏–Ω–µ –∑–¥–µ—Å—å –Ω–µ—Ç –Ω–∏—á–µ–≥–æ, —á—Ç–æ –º–æ–≥–ª–æ –±—ã —Å–ª–æ–º–∞—Ç—å—Å—è.

;; –ù–∞—Å—Ç—Ä–æ–π–∫–∏, —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –¥–ª—è –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–≥–æ —Ä–µ–∂–∏–º–∞
(defun setup-gui-settings (frame-name)
  "–ù–∞—Å—Ç—Ä–æ–π–∫–∏, –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ EMACS –≤ –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–π —Å—Ä–µ–¥–µ.

  FRAME-NAME ‚Äî –∏–º—è —Ñ—Ä–µ–π–º–∞, –∫–æ—Ç–æ—Ä—ã–π –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç—Å—è."
  (when (display-graphic-p frame-name)
    (global-font-lock-mode t)  ;; –û—Ç–æ–±—Ä–∞–∂–∞—Ç—å —à—Ä–∏—Ñ—Ç—ã –∫—Ä–∞—Å–∏–≤–æ, –∏—Å–ø–æ–ª—å–∑—É—è Font Face's

    (defvar availiable-fonts (font-family-list)) ;; –ö–∞–∫–∏–µ –µ—Å—Ç—å —Å–µ–º–µ–π—Å—Ç–≤–∞ —à—Ä–∏—Ñ—Ç–æ–≤?
    (defvar default-font-family nil "–®—Ä–∏—Ñ—Ç –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é.")

    ;; –ü–µ—Ä–µ–±–æ—Ä —à—Ä–∏—Ñ—Ç–æ–≤
    (cond
     ((member "Fira Code Nerd" availiable-fonts)
      (setq default-font-family "Fira Code Nerd"))
     ((member "Fira Code" availiable-fonts)
      (setq default-font-family "Fira Code"))
     ((member "DejaVu Sans Mono Nerd" availiable-fonts)
      (setq default-font-family "DejaVu Sans Mono Nerd"))
     ((member "DejaVu Sans Mono" availiable-fonts)
      (setq default-font-family "DejaVu Sans Mono"))
     ((member "Source Code Pro" availiable-fonts)
      (setq default-font-family "Source Code Pro"))
     ((member "Consolas" availiable-fonts)
      (setq default-font-family "Consolas")))

    (when default-font-family
      ;; –≠—Ç–æ —Ñ–æ—Ä–º–∞—Ç X Logical Font Description Conventions, XLFD
      ;; https://www.x.org/releases/X11R7.7/doc/xorg-docs/xlfd/xlfd.html
      (set-frame-font
       (format "-*-%s-normal-normal-normal-*-%d-*-*-*-m-0-iso10646-1"
               default-font-family
               init-el-font-height) nil t)
      (set-face-attribute 'default nil :family default-font-family))
    (set-face-attribute 'default nil :height (* init-el-font-height 10))))

;; –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π —Å–ø–æ—Å–æ–± –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å, —á—Ç–æ EMACS –∑–∞–ø—É—â–µ–Ω –≤ –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–º —Ä–µ–∂–∏–º–µ. –ü–æ–¥—Ä–æ–±–Ω–µ–µ –∑–¥–µ—Å—å:
;; https://emacsredux.com/blog/2022/06/03/detecting-whether-emacs-is-running-in-terminal-or-gui-mode/
(add-to-list 'after-make-frame-functions #'setup-gui-settings)
(add-hook 'emacs-startup-hook 'setup-gui-settings)

(setup-gui-settings (selected-frame))

(defconst init-el-autosave-dir
  (expand-file-name "saves" user-emacs-directory)
  "–ö–∞—Ç–∞–ª–æ–≥ –¥–ª—è —Ñ–∞–π–ª–æ–≤ –∞–≤—Ç–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è.")
(unless (file-directory-p init-el-autosave-dir)
  (make-directory init-el-autosave-dir))

(defconst init-el-package-user-dir
  (expand-file-name "elpa" user-emacs-directory)
  "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –∫–∞—Ç–∞–ª–æ–≥ —Å –ø–∞–∫–µ—Ç–∞–º–∏.")
(unless (file-directory-p init-el-package-user-dir)
  (make-directory init-el-package-user-dir))

;; –ï—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å—Ç–∞—Ä–∞—è –≤–µ—Ä—Å–∏—è EMACS, –Ω—É–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø—Ä–æ—Ç–æ–∫–æ–ª–∞ TLS.
;; –í –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ –±—É–¥—É—Ç –ø—Ä–æ–±–ª–µ–º—ã –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∞—Ä—Ö–∏–≤–∞ –ø–∞–∫–µ—Ç–æ–≤.
(when (< emacs-major-version 27)
  (require 'gnutls)
  (customize-set-variable
   'gnutls-algorithm-priority
   "NORMAL:-VERS-TLS1.3"
   "–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –¥–ª—è —Å—Ç–∞—Ä—ã—Ö –≤–µ—Ä—Å–∏–π Emacs."))


;; –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø—É—Ç–∏ –∫ –∫–∞—Ç–∞–ª–æ–≥—É —Å –∏—Å—Ö–æ–¥–Ω—ã–º –∫–æ–¥–æ–º
(when (string-equal system-type "gnu/linux")
  (message "–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –û–° –Ω–∞ –±–∞–∑–µ GNU/Linux")
  (defvar init-el-emacs-source-path "–ü—É—Ç—å –∫ –∫–∞—Ç–∞–ª–æ–≥—É —Å –∏—Å—Ö–æ–¥–Ω—ã–º –∫–æ–¥–æ–º Emacs")
  (setq init-el-emacs-source-path
        (format "/usr/share/emacs/%d.%d/src/"
                emacs-major-version
                emacs-minor-version))
  (if (file-exists-p init-el-emacs-source-path)
      ;; –ö–∞—Ç–∞–ª–æ–≥ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
      (if (directory-empty-p init-el-emacs-source-path)
          ;; –ö–∞—Ç–∞–ª–æ–≥ –ø—É—Å—Ç
          (message (format "–ö–∞—Ç–∞–ª–æ–≥ %s –ø—É—Å—Ç." init-el-emacs-source-path))
        ;; –ö–∞—Ç–∞–ª–æ–≥ –Ω–µ –ø—É—Å—Ç
        (progn
          (customize-set-variable 'source-directory init-el-emacs-source-path)
          (message (format "–ò—Å—Ö–æ–¥–Ω—ã–π –∫–æ–¥ –æ–±–Ω–∞—Ä—É–∂–µ–Ω –≤ –∫–∞—Ç–∞–ª–æ–≥–µ %s" init-el-emacs-source-path))))
    ;; –ö–∞—Ç–∞–ª–æ–≥ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    (message (format "–ö–∞—Ç–∞–ª–æ–≥ %s –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç." init-el-emacs-source-path))))


(custom-set-variables
 '(create-lockfiles nil "–ù–µ —Å–æ–∑–¥–∞–≤–∞—Ç—å lock-—Ñ–∞–π–ª—ã")
 '(completion-ignore-case t "–ò–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä –ø—Ä–∏ –∞–≤—Ç–æ–¥–æ–ø–æ–ª–Ω–µ–Ω–∏–∏")
 '(cursor-type 'bar "–ö—É—Ä—Å–æ—Ä –≤ –≤–∏–¥–µ –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–æ–π —á–µ—Ä—Ç—ã")
 '(default-input-method "russian-computer" "–ú–µ—Ç–æ–¥ –≤–≤–æ–¥–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é")
 '(default-transient-input-method "russian-computer")
 '(delete-by-moving-to-trash t "–£–¥–∞–ª—è—Ç—å —Ñ–∞–π–ª—ã –≤ –ö–æ—Ä–∑–∏–Ω—É")
 '(gc-cons-threshold (* 2 gc-cons-threshold) "–£–≤–µ–ª–∏—á–∏—Ç—å —Ä–∞–∑–º–µ—Ä –ø–∞–º—è—Ç–∏ –¥–ª—è —Å–±–æ—Ä—â–∏–∫–∞ –º—É—Å–æ—Ä–∞")
 '(indent-tabs-mode nil "–û—Ç–∫–ª—é—á–∏—Ç—å `indent-tabs-mode'.")
 '(inhibit-startup-screen t "–ù–µ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π —ç–∫—Ä–∞–Ω")
 '(initial-scratch-message nil "–ü—É—Å—Ç–æ–π –±—É—Ñ–µ—Ä *scratch*")
 '(load-prefer-newer t "–ï—Å–ª–∏ –µ—Å—Ç—å —Ñ–∞–π–ª elc, –Ω–æ el –Ω–æ–≤–µ–µ, –∑–∞–≥—Ä—É–∑–∏—Ç—å el-—Ñ–∞–π–ª.")
 '(major-mode 'text-mode "–¢–µ–∫—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º –¥–ª—è –Ω–æ–≤—ã—Ö –±—É—Ñ–µ—Ä–æ–≤ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é.")
 '(read-file-name-completion-ignore-case t "–ò–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä –ø—Ä–∏ –≤–≤–æ–¥–µ –∏–º—ë–Ω —Ñ–∞–π–ª–æ–≤")
 '(read-process-output-max (* 1024 1024) "–£–≤–µ–ª–∏—á–∏–º —á–∞–Ω–∫ —á—Ç–µ–Ω–∏—è –¥–ª—è LSP: –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 65535")
 '(ring-bell-function 'ignore "–û—Ç–∫–ª—é—á–∏—Ç—å –∑–≤—É–∫–æ–≤–æ–µ —Å–æ–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏–µ —Å–æ–±—ã—Ç–∏–π")
 '(save-place-forget-unreadable-files t "–ï—Å–ª–∏ —Ñ–∞–π–ª –Ω–µ–ª—å–∑—è –æ—Ç–∫—Ä—ã—Ç—å, —Ç–æ –∏ –ø–æ–º–Ω–∏—Ç—å –æ –Ω—ë–º –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–¥–æ")
 '(scroll-margin 4 "–û—Ç—Å—Ç—É–ø –æ—Ç –≤–µ—Ä—Ö–Ω–µ–π –∏ –Ω–∏–∂–Ω–µ–π –≥—Ä–∞–Ω–∏—Ü –±—É—Ñ–µ—Ä–∞")
 '(show-trailing-whitespace t "–ü–æ–¥—Å–≤–µ—Ç–∫–∞ –≤–∏—Å—è—á–∏—Ö –ø—Ä–æ–±–µ–ª–æ–≤")
 '(standard-indent 4 "–û—Ç—Å—Ç—É–ø –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é")
 '(tab-always-indent 'complete "–ï—Å–ª–∏ –º–æ–∂–Ω–æ ‚Äî –≤—ã—Ä–æ–≤–Ω—è—Ç—å —Ç–µ–∫—Å—Ç, –∏–Ω–∞—á–µ ‚Äî –∞–≤—Ç–æ–¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ.")
 '(truncate-lines 1 "–û–±—Ä–µ–∑–∞—Ç—å –¥–ª–∏–Ω–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏")
 '(use-dialog-box nil "–î–∏–∞–ª–æ–≥–æ–≤—ã–µ –æ–∫–Ω–∞ –û–° –Ω–µ –Ω—É–∂–Ω—ã")
 '(use-short-answers t "–ö—Ä–∞—Ç–∫–∏–µ –æ—Ç–≤–µ—Ç—ã –≤–º–µ—Å—Ç–æ –¥–ª–∏–Ω–Ω—ã—Ö")
 '(user-full-name "Dunaevsky Maxim" "–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
 '(user-mail-address "dunmaksim@yandex.ru" "–ê–¥—Ä–µ—Å —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –ø–æ—á—Ç—ã")
 '(vc-follow-symlinks t "–ü–µ—Ä–µ—Ö–æ–¥–∏—Ç—å –ø–æ —Å—Å—ã–ª–∫–∞–º –±–µ–∑ –ª–∏—à–Ω–∏—Ö –≤–æ–ø—Ä–æ—Å–æ–≤")
 '(visible-bell t "–ú–∏–≥–∞—Ç—å –±—É—Ñ–µ—Ä–æ–º –ø—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥–µ –≤ –Ω–µ–≥–æ"))


(when (fboundp 'menu-bar-mode)
  (customize-set-variable 'menu-bar-mode nil "–í—ã–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –º–µ–Ω—é"))

(when (fboundp 'scroll-bar-mode)
  (customize-set-variable 'scroll-bar-mode nil "–û—Ç–∫–ª—é—á–∏—Ç—å –ø–æ–ª–æ—Å—ã –ø—Ä–æ–∫—Ä—É—Ç–∫–∏"))

(when (fboundp 'tool-bar-mode)
  (customize-set-variable 'tool-bar-mode nil "–í—ã–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–∞–Ω–µ–ª–∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤"))


(require 'keymap)

(keymap-global-unset "<insert>")  ;; –†–µ–∂–∏–º –ø–µ—Ä–µ–∑–∞–ø–∏—Å–∏ –Ω–µ –Ω—É–∂–µ–Ω
(keymap-global-unset "M-,")       ;; –¢–∞–∫–∏–µ –º–∞—Ä–∫–µ—Ä—ã –Ω–µ –Ω—É–∂–Ω—ã
(keymap-global-unset "C-z")       ;; –¢–∞–∫–æ–π Ctrl+Z –Ω–∞–º –Ω–µ –Ω—É–∂–µ–Ω
(keymap-global-unset "C-x C-z")   ;; `suspend-emacs' —Ç–æ–∂–µ –Ω–µ –Ω—É–∂–µ–Ω
(keymap-global-unset "C-x C-p")   ;; `mark-page' –Ω–µ –Ω—É–∂–Ω–∞, —á–∞—Å—Ç–æ –∫–æ–Ω—Ñ–ª–∏–∫—Ç—É–µ—Ç —Å Projectile

;; –í–∫–ª—é—á–∏–º –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –±—É—Ñ–µ—Ä–æ–≤ –ø–æ Ctrl+PgUp –∏ Ctrl+PgDn
(keymap-global-unset "C-<next>")  ;; –ù–∏ —Ä–∞–∑—É –Ω–µ –≤–∏–¥–µ–ª, —á—Ç–æ —ç—Ç–æ –±—ã–ª–æ –Ω—É–∂–Ω–æ
(keymap-global-unset "C-<prior>") ;; –≠—Ç–æ —Å–æ—á–µ—Ç–∞–Ω–∏–µ —Ç–æ–∂–µ –Ω–µ –Ω—É–∂–Ω–æ.
(keymap-global-set "C-<next>" 'next-buffer)
(keymap-global-set "C-<prior>" 'previous-buffer)

;; –ó–∞–∫—Ä—ã—Ç—å –±—É—Ñ–µ—Ä –ø–æ –Ω–∞–∂–∞—Ç–∏—é [C-x k]
(keymap-global-set "C-x k" (lambda() (interactive) (kill-buffer (current-buffer))))

;; –í—Å—Ç–∞–≤–∫–∞ –¥–ª–∏–Ω–Ω–æ–≥–æ —Ç–∏—Ä–µ –ø–æ –Ω–∞–∂–∞—Ç–∏—é [M--]
(keymap-global-set "M--" (lambda() (interactive) (insert "‚Äî")))


;; üì¶ PACKAGE
(require 'package)
(add-to-list 'package-archives '("gnu" . "https://elpa.gnu.org/packages/") t)
(add-to-list 'package-archives '("melpa" . "https://melpa.org/packages/") t)
(add-to-list 'package-archives '("melpa-stable" . "https://stable.melpa.org/packages/") t)
(add-to-list 'package-archives '("nongnu" . "https://elpa.nongnu.org/nongnu/") t)
(package-initialize)

(customize-set-variable
 'package-archive-priorities
 '(("gnu" . 40)
   ("nongnu" . 30)
   ("melpa-stable" . 20)
   ("melpa" . 10)))

(unless package-archive-contents
  (progn
    (message "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∞—Ä—Ö–∏–≤–æ–≤...")
    (package-refresh-contents)))

(unless (package-installed-p 'gnu-elpa-keyring-update)
  (progn
    (message "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–ª—é—á–µ–π –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ü–∏—Ñ—Ä–æ–≤–æ–π –ø–æ–¥–ø–∏—Å–∏.")
    (package-install 'gnu-elpa-keyring-update)))

(unless (package-installed-p 'use-package)
  (progn
    (message "–ü–∞–∫–µ—Ç `use-package' –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.")
    (message "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ `use-package'...")
    (package-install 'use-package t)))

(require 'use-package)

;; –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –æ—Ç–ª–∞–¥–æ—á–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞
(when init-file-debug
  (custom-set-variables
   '(debug-on-error t "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–µ—Ä–µ–π—Ç–∏ –≤ —Ä–µ–∂–∏–º –æ—Ç–ª–∞–¥–∫–∏ –ø—Ä–∏ –æ—à–∏–±–∫–∞—Ö.")
   '(use-package-compute-statistics t "–°–±–æ—Ä —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ `use-package'.")
   '(use-package-expand-minimally t "–ú–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ —Ä–∞—Å–∫—Ä—ã—Ç–∏–µ –∫–æ–¥–∞.")
   '(use-package-verbose t "–ü–æ–¥—Ä–æ–±–Ω—ã–π —Ä–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã `use-package'.")))


;; üì¶ ABBREV-MODE
;; –í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –ø–∞–∫–µ—Ç.
;; –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∞–±–±—Ä–µ–≤–∏–∞—Ç—É—Ä -- —Ñ—Ä–∞–≥–º–µ–Ω—Ç–æ–≤ —Ç–µ–∫—Å—Ç–∞, –∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–∏ –≤–≤–æ–¥–µ
;; –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ–π –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ —Å–∏–º–≤–æ–ª–æ–≤ –∑–∞–º–µ–Ω—è—é—Ç—Å—è –Ω–∞ –¥—Ä—É–≥—É—é.
(use-package abbrev
  :hook
  ((asciidoc-mode
    markdown-mode
    rst-mode) . abbrev-mode))


;; üì¶ ANSI-COLOR
(use-package ansi-color
  :custom
  (ansi-color-for-compilation-mode t "–†–∞—Å—Ü–≤–µ—Ç–∫–∞ –±—É—Ñ–µ—Ä–∞ *compile*")
  :hook
  (compilation-filter . ansi-color-compilation-filter))


;; üì¶ AUTOREVERT
;; –í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –ø–∞–∫–µ—Ç.
;; https://www.gnu.org/software/emacs/manual/html_node/emacs/Auto-Revert.html
;; –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±—É—Ñ–µ—Ä–æ–≤.
;; –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é `global-auto-revert-mode' —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ —Å —Ñ–∞–π–ª–æ–≤—ã–º–∏
;; –±—É—Ñ–µ—Ä–∞–º–∏.
(use-package autorevert
  :custom
  (auto-revert-check-vc-info t "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–±–Ω–æ–≤–ª—è—Ç—å —Å—Ç–∞—Ç—É—Å–Ω—É—é —Å—Ç—Ä–æ–∫—É")
  :config
  (global-auto-revert-mode 1)
  :hook
  (dired-mode . auto-revert-mode))


;; üì¶ CALENDAR
;; –í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –ø–∞–∫–µ—Ç
(use-package calendar
  :custom
  (calendar-week-start-day 1 "–ù–∞—á–Ω—ë–º –Ω–µ–¥–µ–ª—é —Å –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫–∞."))


;; üì¶ CHECKDOC
;; –í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –ø–∞–∫–µ—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç—Ä–æ–∫ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏.
(use-package checkdoc
  :custom
  (checkdoc-minor-mode-string " CheckDoc")
  :hook
  (emacs-lisp-mode . checkdoc-minor-mode))


;; üì¶ COMPILE
(use-package compile
  :custom
  (compilation-scroll-output t))


;; üì¶ CONF-MODE
;; –í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –ø–∞–∫–µ—Ç.
;; –û—Å–Ω–æ–≤–Ω–æ–π —Ä–µ–∂–∏–º –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ INI/CONF
(use-package conf-mode
  :mode
  (("\\.env\\'" . conf-mode)
   ("\\.flake8\\'" . conf-mode)
   ("\\.pylintrc\\'" . conf-mode)
   ("\\inventory\\'" . conf-mode)))


;; üì¶ CSS-MODE
;; –í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –ø–∞–∫–µ—Ç –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å CSS
(use-package css-mode
  :custom
  (css-indent-offset 2 "–û—Ç—Å—Ç—É–ø 2 –ø—Ä–æ–±–µ–ª–∞"))


;; üì¶ DELSEL
;; –í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –ø–∞–∫–µ—Ç.
;; –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–∏–µ–º –≤—ã–¥–µ–ª–µ–Ω–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞.
(use-package delsel
  :config
  (delete-selection-mode t)) ;; –£–¥–∞–ª—è—Ç—å –≤—ã–¥–µ–ª–µ–Ω–Ω—ã–π —Ñ—Ä–∞–≥–º–µ–Ω—Ç –ø—Ä–∏ –≤–≤–æ–¥–µ —Ç–µ–∫—Å—Ç–∞


;; üì¶ DESKTOP
;; –í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –ø–∞–∫–µ—Ç.
;; –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è Emacs –º–µ–∂–¥—É —Å–µ—Å—Å–∏—è–º–∏.
;; https://www.gnu.org/software/emacs/manual/html_node/emacs/Saving-Emacs-Sessions.html
(use-package desktop
  :custom
  (desktop-dirname user-emacs-directory "–ö–∞—Ç–∞–ª–æ–≥ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ñ–∞–π–ª–∞ .desktop.")
  (desktop-load-locked-desktop t "–ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–∞ .desktop –¥–∞–∂–µ –µ—Å–ª–∏ –æ–Ω –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω.")
  (desktop-restore-frames t "–í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—Ç—å —Ñ—Ä–µ–π–º—ã.")
  (desktop-save t "–°–æ—Ö—Ä–∞–Ω—è—Ç—å —Å–ø–∏—Å–æ–∫ –æ—Ç–∫—Ä—ã—Ç—ã—Ö –±—É—Ñ–µ—Ä–æ–≤, —Ñ–∞–π–ª–æ–≤ –∏ —Ç.¬†–¥. –±–µ–∑ –ª–∏—à–Ω–∏—Ö –≤–æ–ø—Ä–æ—Å–æ–≤.")
  :config
  (progn
    (desktop-save-mode 1)
    (add-hook 'server-after-make-frame-hook 'desktop-read)
    (add-to-list 'desktop-modes-not-to-save 'treesit--exporer-tree-mode)))


;; üì¶ DIRED
;; –í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –ø–∞–∫–µ—Ç –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ñ–∞–π–ª–∞–º–∏ –∏ –∫–∞—Ç–∞–ª–æ–≥–∞–º–∏.
;; –ö–ª–∞–≤–∏—à–∏:
;; [+] - —Å–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ç–∞–ª–æ–≥–∞.
;; [C-x C-f] - —Å–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ —Å –ø–æ—Å–ª–µ–¥—É—é—â–∏–º –æ—Ç–∫—Ä—ã—Ç–∏–µ–º –±—É—Ñ–µ—Ä–∞.
(use-package dired
  :custom
  (dired-free-space 'separate "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞–Ω—è—Ç–æ–º –∏ —Å–≤–æ–±–æ–¥–Ω–æ–º –º–µ—Å—Ç–µ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–π —Å—Ç—Ä–æ–∫–µ")
  (dired-garbage-files-regexp
    (concat (regexp-opt
              '(".aux"
                ".bak"
                ".dvi"
                ".log"
                ".orig"
                ".rej"
                ".toc"
                ".~undo-tree~")) ;; –î–æ–±–∞–≤–∏–ª —Ñ–∞–π–ª—ã UNDO-TREE –≤ —Å–ø–∏—Å–æ–∫ –º—É—Å–æ—Ä–∞
      "\\'"))
  (dired-kill-when-opening-new-dired-buffer t "–£–¥–∞–ª—è—Ç—å –±—É—Ñ–µ—Ä –ø—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥–µ –≤ –¥—Ä—É–≥–æ–π –∫–∞—Ç–∞–ª–æ–≥")
  (dired-listing-switches "-l --human-readable --all --group-directories-first")
  (dired-recursive-deletes 'always "–ù–µ –∑–∞–¥–∞–≤–∞—Ç—å –ª–∏—à–Ω–∏—Ö –≤–æ–ø—Ä–æ—Å–æ–≤ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –Ω–µ-–ø—É—Å—Ç—ã—Ö –∫–∞—Ç–∞–ª–æ–≥–æ–≤")
  :init
  (add-hook 'dired-mode-hook 'dired-hide-details-mode))


;; üì¶ DISPLAY-LINE-NUMBERS-MODE
;; –í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –ø–∞–∫–µ—Ç –¥–ª—è –ø–æ–∫–∞–∑–∞ –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫
(use-package display-line-numbers
  :hook
  ((asciidoc-mode
    c-mode
    conf-mode
    css-ts-mode
    csv-mode
    dockerfile-ts-mode
    emacs-lisp-mode
    html-ts-mode
    js-ts-mode
    json-ts-mode
    latex-mode
    lisp-data-mode
    makefile-mode
    markdown-mode
    nxml-mode
    po-mode
    python-ts-mode
    rst-mode
    ruby-ts-mode
    sh-mode
    terraform-mode
    tex-mode
    yaml-ts-mode) . display-line-numbers-mode))


;; üì¶ DOCKERFILE-TS-MODE
;; –í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –ø–∞–∫–µ—Ç –Ω–∞ –±–∞–∑–µ TreeSitter –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å Dockerfile.
(use-package dockerfile-ts-mode
  :mode
  ("\\Containerfile\\'" . dockerfile-ts-mode))


;; üì¶ ELECTRIC-INDENT MODE
;; –í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –ø–∞–∫–µ—Ç.
;; –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –æ—Ç—Å—Ç—É–ø. –í –æ—Å–Ω–æ–≤–Ω–æ–º —Ç–æ–ª—å–∫–æ –º–µ—à–∞–µ—Ç, –ª—É—á—à–µ –≤—ã–∫–ª—é—á–∏—Ç—å.
(use-package electric
  :custom
  (electric-indent-inhibit t "–ù–µ –≤—ã—Ä–∞–≤–Ω–∏–≤–∞—Ç—å –ø—Ä–µ–¥—ã–¥—É—â—É—é —Å—Ç—Ä–æ–∫—É –ø–æ –Ω–∞–∂–∞—Ç–∏—é RET.")
  :hook
  ((emacs-lisp-mode
    markdown-mode
    python-ts-mode
    rst-mode
    ruby-ts-mode) . electric-indent-local-mode))


;; üì¶ ELEC-PAIR MODE
;; –í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –ø–∞–∫–µ—Ç.
;; –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤—Å—Ç–∞–≤–ª—è–µ—Ç –ø—Ä–∏ –≤–≤–æ–¥–µ –æ–¥–Ω–æ–π —Å–∫–æ–±–∫–∏ –∏–ª–∏ –∫–∞–≤—ã—á–∫–∏ –ø–∞—Ä–Ω—É—é –µ–π. –ï—Å–ª–∏
;; –≤—ã–¥–µ–ª–µ–Ω —Ä–µ–≥–∏–æ–Ω, —Ç–æ –≤ —Å–∫–æ–±–∫–∏ –æ–±—Ä–∞–º–ª—è–µ—Ç—Å—è –æ–Ω.
(use-package elec-pair
  :config
  (progn
    (add-to-list 'electric-pair-pairs '(?\( . ?\))) ;; ()
    (add-to-list 'electric-pair-pairs '(?\[ . ?\])) ;; []
    (add-to-list 'electric-pair-pairs '(?{ . ?}))   ;; {}
    (add-to-list 'electric-pair-pairs '(?¬´ . ?¬ª))   ;; ¬´¬ª
    (add-to-list 'electric-pair-pairs '(?‚Äò . ‚Äô?))   ;; ‚Äò‚Äô
    (add-to-list 'electric-pair-pairs '(?‚Äö . ‚Äò?))   ;; ‚Äö‚Äò
    (add-to-list 'electric-pair-pairs '(?‚Äú . ‚Äù?)))  ;; ‚Äú‚Äù))
  :hook
  ((asciidoc-mode
    conf-mode
    css-ts-mode
    emacs-lisp-data-mode
    emacs-lisp-mode
    html-ts-mode
    js-ts-mode
    json-ts-mode
    lisp-data-mode
    markdown-mode
    python-ts-mode
    ruby-mode
    terraform-mode
    yaml-ts-mode) . electric-pair-local-mode))


;; üì¶ EMACS-LISP-MODE
;; IT IS NOT A ELISP-MODE!
;; –í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –ø–∞–∫–µ—Ç –¥–ª—è EMACS Lisp
(use-package elisp-mode
  :mode
  ("\\.abbrev_defs\\'" . lisp-data-mode)
  ("\\.el\\'" . emacs-lisp-mode))


;; üì¶ FACE-REMAP
;; –í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –ø–∞–∫–µ—Ç.
;; –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —à—Ä–∏—Ñ—Ç–æ–≤ –≤ –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–º —Ä–µ–∂–∏–º–µ.
(use-package face-remap
  :custom
  (text-scale-mode-step 1.1 "–®–∞–≥ —É–≤–µ–ª–∏—á–µ–Ω–∏—è –º–∞—Å—à—Ç–∞–±–∞"))


;; üì¶ FILES
;; –≠—Ç–æ –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –ø–∞–∫–µ—Ç –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ñ–∞–π–ª–∞–º–∏
(use-package files
  :custom
  (auto-save-file-name-transforms `((".*" , init-el-autosave-dir) t))
  (delete-old-versions t "–£–¥–∞–ª—è—Ç—å —Å—Ç–∞—Ä—ã–µ —Ä–µ–∑–µ—Ä–≤–Ω—ã–µ –∫–æ–ø–∏–∏ —Ñ–∞–π–ª–æ–≤ –±–µ–∑ –ª–∏—à–Ω–∏—Ö –≤–æ–ø—Ä–æ—Å–æ–≤")
  (enable-local-eval t "–†–∞–∑—Ä–µ—à–∏—Ç—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –≤—ã–∑–æ–≤ `eval' –≤ `.dir-locals.el'")
  (enable-local-variables :all "–°—á–∏—Ç–∞—Ç—å –≤—Å–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ —Ñ–∞–π–ª–æ–≤ `.dir-locals.el' –±–µ–∑–æ–ø–∞—Å–Ω—ã–º–∏")
  (large-file-warning-threshold (* 100 1024 1024) "–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ —Ñ–∞–π–ª–æ–≤ –±–æ–ª—å—à–µ 100 –ú–ë (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é ‚Äî 10 –ú–ë)")
  (make-backup-files nil "–†–µ–∑–µ—Ä–≤–Ω—ã–µ –∫–æ–ø–∏–∏ –Ω–µ –Ω—É–∂–Ω—ã, —É –Ω–∞—Å –µ—Å—Ç—å undo-tree")
  (require-final-newline t "–¢—Ä–µ–±–æ–≤–∞—Ç—å –Ω–æ–≤—É—é —Å—Ç—Ä–æ–∫—É –≤ –∫–æ–Ω—Ü–µ —Ñ–∞–π–ª–æ–≤")
  (save-abbrevs 'silently "–°–æ—Ö—Ä–∞–Ω—è—Ç—å –∞–±–±—Ä–µ–≤–∏–∞—Ç—É—Ä—ã –±–µ–∑ –ª–∏—à–Ω–∏—Ö –≤–æ–ø—Ä–æ—Å–æ–≤")
  :config
  (progn
    (add-to-list 'safe-local-variable-values '(buffer-env-script-name . ".venv/bin/activate"))
    (add-to-list 'safe-local-variable-values '(electric-pair-preserve-balance . t))
    (add-to-list 'safe-local-variable-values '(emacs-lisp-docstring-fill-column . 80))
    (add-to-list 'safe-local-variable-values '(fill-column . 120))
    (add-to-list 'safe-local-variable-values '(fill-column . 80))
    (add-to-list 'safe-local-variable-values '(frozen_string_literal . true))
    (add-to-list 'safe-local-variable-values '(lexical-binding . t))
    (add-to-list 'major-mode-remap-alist '(css-mode . css-ts-mode))
    (add-to-list 'major-mode-remap-alist '(dockerfile-mode . dockerfile-ts-mode))
    (add-to-list 'major-mode-remap-alist '(html-mode . html-ts-mode))
    (add-to-list 'major-mode-remap-alist '(json-mode . json-ts-mode))
    (add-to-list 'major-mode-remap-alist '(python-mode . python-ts-mode))
    (add-to-list 'major-mode-remap-alist '(ruby-mode . ruby-ts-mode))
    (add-to-list 'major-mode-remap-alist '(rust-mode . rust-ts-mode))
    (add-to-list 'major-mode-remap-alist '(typescript-mode . typescript-ts-mode))
    (add-to-list 'major-mode-remap-alist '(yaml-mode . yaml-ts-mode))))


;; üì¶ FILL-COLUMN
;; –í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –ø–∞–∫–µ—Ç.
;; –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º–æ–π –≥—Ä–∞–Ω–∏—Ü—ã —Å–∏–º–≤–æ–ª–æ–≤.
(use-package display-fill-column-indicator
  :hook
  ((emacs-lisp-mode
    js-ts-mode
    python-ts-mode
    yaml-ts-mode) . display-fill-column-indicator-mode))


;; üì¶ FLYMAKE
;; –í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –ø–∞–∫–µ—Ç –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å–æ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–º–∏ –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä–∞–º–∏.
(use-package flymake
  :hook (emacs-mode . flymake-mode))


;; üì¶ FLYSPELL-MODE
;; –í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –ø–∞–∫–µ—Ç.
;; –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ä—Ñ–æ–≥—Ä–∞—Ñ–∏–∏ —Å –ø–æ–º–æ—â—å—é —Å–ª–æ–≤–∞—Ä–µ–π.
;; –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø–∞–∫–µ—Ç —Ç–æ–ª—å–∫–æ –≤ —Ç–æ–º —Å–ª—É—á–∞–µ, –∫–æ–≥–¥–∞ –¥–µ–ª–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –≤
;; Linux –∏ Hunspell –∏–ª–∏ Aspell –¥–æ—Å—Ç—É–ø–Ω—ã.
(when (string-equal system-type "gnu/linux")
  (defvar text-spell-program nil "–ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ—Ä—Ñ–æ–≥—Ä–∞—Ñ–∏–∏.")
  (cond
    ((or
       (file-exists-p "/usr/bin/hunspell")
       (file-symlink-p "/usr/bin/hunspell"))
      (setq text-spell-program "hunspell"))
    ((or
       (file-exists-p "/usr/bin/aspell")
       (file-symlink-p "/usr/bin/aspell"))
      (setq text-spell-program "aspell")))
  ;; –ù—É–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å ispell-mode —Ç–æ–ª—å–∫–æ –≤ —Ç–æ–º —Å–ª—É—á–∞–µ, –∫–æ–≥–¥–∞ –µ—Å—Ç—å
  ;; —á–µ–º –ø—Ä–æ–≤–µ—Ä—è—Ç—å –æ—Ä—Ñ–æ–≥—Ä–∞—Ñ–∏—é.
  (if text-spell-program
    ;; then
    (progn
      (message (format "–î–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ—Ä—Ñ–æ–≥—Ä–∞—Ñ–∏–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è %s" text-spell-program))
      (use-package flyspell
        :custom
        (ispell-program-name text-spell-program)
        :hook
        ((text-mode . flyspell-mode)
          (emacs-lisp-mode . flyspell-prog-mode))))
    ;; else
    (message "–ù–µ –Ω–∞–π–¥–µ–Ω–æ –ø—Ä–æ–≥—Ä–∞–º–º –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ—Ä—Ñ–æ–≥—Ä–∞—Ñ–∏–∏.")))


;; üì¶ FRAME
;; –í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –ø–∞–∫–µ—Ç.
;; –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ñ—Ä–µ–π–º–∞–º–∏.
(use-package frame
  :custom
  (window-divider-default-places 't "–†–∞–∑–¥–µ–ª–∏—Ç–µ–ª–∏ –æ–∫–æ–Ω —Å–æ –≤—Å–µ—Ö —Å—Ç–æ—Ä–æ–Ω (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é —Ç–æ–ª—å–∫–æ —Å–ø—Ä–∞–≤–∞)")
  (window-divider-default-right-width 3  "–®–∏—Ä–∏–Ω–∞ –≤ –ø–∏–∫—Å–µ–ª—è—Ö –¥–ª—è –ª–∏–Ω–∏–∏-—Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—è –æ–∫–æ–Ω")
  :bind
  (:map global-map
    ("C-x O" . previous-window-any-frame) ;; –ü–µ—Ä–µ–π—Ç–∏ –≤ –ø—Ä–µ–¥—ã–¥—É—â–µ–µ –æ–∫–Ω–æ
    ;; –ü–µ—Ä–µ–π—Ç–∏ –≤ —Å–ª–µ–¥—É—é—â–µ–µ –æ–∫–Ω–æ
    ("C-x o" . next-window-any-frame)
    ("M-o" . next-window-any-frame)))


;; üì¶ GOTO-ADDRESS-MODE
;; –í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –ø–∞–∫–µ—Ç.
;; –ü–æ–¥—Å–≤–µ—á–∏–≤–∞–µ—Ç —Å—Å—ã–ª–∫–∏ –∏ –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç—å –ø–æ –Ω–∏–º —Å –ø–æ–º–æ—â—å—é [C-c RET].
;; –í–æ–∑–º–æ–∂–Ω—ã –≤–∞—Ä–∏–∞–Ω—Ç—ã (–∑–∞–≤–∏—Å–∏—Ç –æ—Ç –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞).
(use-package goto-addr
  :hook
  ((asciidoc-mode
    emacs-lisp-mode
    html-ts-mode
    markdown-mode
    rst-mode) . goto-address-mode))


;; üì¶ GREP
;; –í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –ø–∞–∫–µ—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞ —Å –ø–æ–º–æ—â—å—é `grep'.
(use-package grep
  :bind
  (:map global-map ("<f6>" . find-grep)))


;; üì¶ HTML-TS-MODE
;; –í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –ø–∞–∫–µ—Ç –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å HTML –∏ SGML.
(use-package html-ts-mode
  :mode
  ("\\.jinja\\'" . html-ts-mode))


;; üì¶ IBUFFER
;; –í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –ø–∞–∫–µ—Ç –¥–ª—è —É–¥–æ–±–Ω–æ–π —Ä–∞–±–æ—Ç—ã —Å –±—É—Ñ–µ—Ä–∞–º–∏.
;; –ü–æ –Ω–∞–∂–∞—Ç–∏—é F2 –≤—ã–≤–æ–¥–∏—Ç —Å–ø–∏—Å–æ–∫ –æ—Ç–∫—Ä—ã—Ç—ã—Ö –±—É—Ñ–µ—Ä–æ–≤.
(use-package ibuffer
  :custom
  (ibuffer-formats '((mark      ;; –û—Ç–º–µ—Ç–∫–∞
                      modified  ;; –ë—É—Ñ–µ—Ä –∏–∑–º–µ–Ω—ë–Ω?
                      read-only ;; –¢–æ–ª—å–∫–æ —á—Ç–µ–Ω–∏–µ?
                      locked    ;; –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω?
                      " "
                      (name 35 45 :left :elide) ;; –ò–º—è –±—É—Ñ–µ—Ä–∞: –æ—Ç 30 –¥–æ 40 –∑–Ω–∞–∫–æ–≤
                      " "
                      (mode 8 -1 :left)         ;; –ê–∫—Ç–∏–≤–Ω—ã–π —Ä–µ–∂–∏–º: –æ—Ç 8 –∑–Ω–∞–∫–æ–≤ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é, –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ —É–≤–µ–ª–∏—á–∏—Ç—å
                      " "
                      filename-and-process)     ;; –ò–º—è —Ñ–∞–π–ª–∞ –∏ –ø—Ä–æ—Ü–µ—Å—Å
                     ;; –°–æ–∫—Ä–∞—â—ë–Ω–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç
                     (mark      ;; –û—Ç–º–µ—Ç–∫–∞?
                      " "
                      (name 35 -1) ;; –ò–º—è –±—É—Ñ–µ—Ä–∞: 32 –∑–Ω–∞–∫–∞, –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ ‚Äî —Ä–∞—Å—à–∏—Ä–∏—Ç—å –Ω–∞ —Å–∫–æ–ª—å–∫–æ –Ω—É–∂–Ω–æ
                      " "
                      filename)))  ;; –ò–º—è —Ñ–∞–π–ª–∞
  (ibuffer-default-sorting-mode 'filename/process "–°–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å —Ñ–∞–π–ª—ã –ø–æ –∏–º–µ–Ω–∏ / –ø—Ä–æ—Ü–µ—Å—Å—É")
  (ibuffer-display-summary nil "–ù–µ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å —Å—Ç—Ä–æ–∫—É –ò–¢–û–ì–û")
  (ibuffer-eliding-string "‚Ä¶" "–ï—Å–ª–∏ —Å—Ç—Ä–æ–∫–∞ –Ω–µ —É–º–µ—Å—Ç–∏–ª–∞—Å—å, –ø–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ—Ç —Å–∏–º–≤–æ–ª")
  (ibuffer-expert 1 "–ù–µ –∑–∞–ø—Ä–∞—à–∏–≤–∞—Ç—å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –¥–ª—è –æ–ø–∞—Å–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π")
  (ibuffer-shrink-to-minimum-size t "–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä –±—É—Ñ–µ—Ä–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é")
  (ibuffer-truncate-lines nil "–ù–µ –æ–±–∫—É—Å—ã–≤–∞—Ç—å –¥–ª–∏–Ω–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏")
  (ibuffer-use-other-window t "–û—Ç–∫—Ä—ã–≤–∞—Ç—å –±—É—Ñ–µ—Ä *Ibuffer* –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –æ–∫–Ω–µ")
  :init
  (defalias 'list-buffers 'ibuffer "–ó–∞–º–µ–Ω–∞ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ –Ω–∞ ibuffer.")
  :bind
  (:map global-map ("<f2>" . ibuffer)))


;; üì¶ IBUF-EXT
;; –í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –ø–∞–∫–µ—Ç —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ `ibuffer'.
(require 'ibuf-ext)
(custom-set-variables
 '(ibuffer-saved-filter-groups                    ;; –ì—Ä—É–ø–ø—ã –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
   '(("default"
      ("Dired" (mode . dired-mode))
      ("Emacs Lisp"
       (or
        (mode . emacs-lisp-mode)
        (mode . lisp-data-mode)))
      ("Org" (mode . org-mode))
      ("Markdown" (mode . markdown-mode))
      ("AsciiDoc" (mode . asciidoc-mode))
      ("ReStructured Text" (mode . rst-mode))
      ("CONF / INI"
       (or
        (mode . conf-mode)
        (mode . editorconfig-conf-mode)))
      ("XML" (mode . nxml-mode))
      ("YAML" (mode . yaml-ts-mode))
      ("Makefile" (mode . makefile-mode))
      ("Python" (mode . python-ts-mode))
      ("Ruby" (mode . ruby-ts-mode))
      ("SSH keys" (or (name . "^\\*.pub$")))
      ("Shell-script" (mode . sh-mode))
      ("Terraform" (mode . terraform-mode))
      ("SQL" (mode . sql-mode))
      ("Web"
       (or
        (mode . html-ts-mode)
        (mode . js-ts-mode)))
      ("Magit"
       (or
        (mode . magit-status-mode)
        (mode . magit-log-mode)
        (name . "^\\*magit")
        (name . "git-monitor")))
      ("Commands"
       (or
        (mode . compilation-mode)
        (mode . eshell-mode)
        (mode . shell-mode)
        (mode . term-mode)))
      ("Emacs"
       (or
        (name . "^\\*scratch\\*$")
        (name . "^\\*Messages\\*$")
        (name . "^\\*\\(Customize\\|Help\\)")
        (name . "\\*\\(Echo\\|Minibuf\\)"))))))
 '(ibuffer-hidden-filter-groups (list "*Internal*" ) "–ù–µ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å —ç—Ç–∏ –±—É—Ñ–µ—Ä—ã")
 '(ibuffer-show-empty-filter-groups nil "–ù–µ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –ø—É—Å—Ç—ã–µ –≥—Ä—É–ø–ø—ã"))
(add-hook 'ibuffer-mode-hook 'ibuffer-auto-mode)
(add-hook 'ibuffer-mode-hook #'(lambda ()(ibuffer-switch-to-saved-filter-groups "default")))


;; üì¶ JS-MODE
;; –í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –ø–∞–∫–µ—Ç –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å JavaScript.
(use-package js
  :custom
  (js-indent-level 2 "–û—Ç—Å—Ç—É–ø –≤ 2 –ø—Ä–æ–±–µ–ª–∞, –∞ –Ω–µ 4 (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é).")
  (js-chain-indent t "–í—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏–µ –ø—Ä–∏ —Ü–µ–ø–æ—á–∫–µ –≤—ã–∑–æ–≤–æ–≤ —á–µ—Ä–µ–∑ —Ç–æ—á–∫—É.")
  (js-switch-indent-offset 2 "–û—Ç—Å—Ç—É–ø –≤ 2 –ø—Ä–æ–±–µ–ª–∞ –¥–ª—è switch/case."))


;; üì¶ JSON-TS-MODE
;; –í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –ø–∞–∫–µ—Ç –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å JSON —á–µ—Ä–µ–∑ TreeSitter
(use-package json-ts-mode)


;; üì¶ MAKEFILE
;; –í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –ø–∞–∫–µ—Ç –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å `Makefile'.
(use-package make-mode)


;; üì¶ NEW-COMMENT
;; –í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –ø–∞–∫–µ—Ç –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è–º–∏.
(use-package newcomment
  :bind
  (:map global-map
    ("M-'" . comment-or-uncomment-region)))


;; üì¶ PAREN
;; –í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –ø–∞–∫–µ—Ç –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–∞—Ä–Ω—ã–º–∏ —Å–∫–æ–±–∫–∞–º–∏.
(use-package paren
  :config
  (show-paren-mode 1)) ;; –ü–æ–¥—Å–≤–µ—á–∏–≤–∞—Ç—å –ø–∞—Ä–Ω—ã–µ —Å–∫–æ–±–∫–∏


;; üì¶ PIXEL-SCROLL
;; –í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –ø–∞–∫–µ—Ç, –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø–ª–∞–≤–Ω–æ –ø—Ä–æ–∫—Ä—É—á–∏–≤–∞—Ç—å —Ç–µ–∫—Å—Ç
(when (package-installed-p 'pixel-scroll)
  (use-package pixel-scroll
    :config
    (progn
      (pixel-scroll-mode 1)
      (pixel-scroll-precision-mode))))


;; üì¶ REPEAT-MODE
;; –í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –ø–∞–∫–µ—Ç –¥–ª—è –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏—è —Ç–∏–ø–æ–≤—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π
(use-package repeat
  :config
  (repeat-mode 1))


;; üì¶ REPLACE
;; –í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –ø–∞–∫–µ—Ç.
;; –§—É–Ω–∫—Ü–∏–∏ –ø–æ–∏—Å–∫–∞ –∏ –∑–∞–º–µ–Ω—ã —Ç–µ–∫—Å—Ç–∞.
(use-package replace
  :bind
  (:map global-map
        ("<f3>" . replace-string)
        ("<f4>" . replace-regexp)))


;; üì¶ RUBY-TS-MODE
;; –í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –ø–∞–∫–µ—Ç –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å Ruby.
(use-package ruby-ts-mode
  :mode
  ("Vagrantfile\\'" . ruby-ts-mode))


;; üì¶ SAVEPLACE
;; –í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –ø–∞–∫–µ—Ç.
;; –ó–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –ø–æ–∑–∏—Ü–∏–∏ –∫—É—Ä—Å–æ—Ä–∞ –≤ –ø–æ—Å–µ—â—ë–Ω–Ω—ã—Ö —Ñ–∞–π–ª–∞—Ö.
(use-package saveplace
  :custom
  (save-place-forget-unreadable-files t "–ù–µ –∑–∞–ø–æ–º–∏–Ω–∞—Ç—å –ø–æ–ª–æ–∂–µ–Ω–∏–µ –≤ –Ω–µ—á–∏—Ç–∞–µ–º—ã—Ö —Ñ–∞–π–ª–∞—Ö.")
  :config
  (save-place-mode 1))


;; üì¶ RST-MODE
;; –í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –ø–∞–∫–µ—Ç –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è reStructutedText
;; https://www.writethedocs.org/guide/writing/reStructuredText/
(use-package rst
  :custom
  (rst-default-indent 3)
  (rst-indent-comment 3)
  (rst-indent-field 3)
  (rst-indent-literal-minimized 3)
  (rst-indent-width 3)
  (rst-preferred-adornments '((?# over-and-under 1)
                              (?* over-and-under 1)
                              (?= simple 0)
                              (?- simple 0)
                              (?^ simple 0)
                              (?\" simple 0)))
  (rst-toc-indent 3))


;; üì¶ SAVE-HIST
;; –í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –ø–∞–∫–µ—Ç.
;; –ó–∞–ø–æ–º–∏–Ω–∞–µ—Ç –∏—Å—Ç–æ—Ä–∏—é –≤–≤–µ–¥–µ–Ω–Ω—ã—Ö –∫–æ–º–∞–Ω–¥
(require 'savehist)
(savehist-mode 1)
(add-hook 'kill-emacs-hook 'savehist-save)
(add-to-list 'delete-frame-functions 'savehist-save)


;; üì¶ SHELL-SCRIPT-MODE
;; –í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –ø–∞–∫–µ—Ç.
;; –†–∞–±–æ—Ç–∞ —Å–æ —Å–∫—Ä–∏–ø—Ç–∞–º–∏ Shell.
(use-package sh-script
  :mode
  ("\\.bashrc\\'" . bash-ts-mode)
  ("\\.envrc\\'" . sh-mode)
  ("\\.profile\\'" . sh-mode)
  ("\\.sh\\'" . sh-mode))


;; üì¶ SHELL-MODE
;; –í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –ø–∞–∫–µ—Ç.
;; –û–±–æ–ª–æ—á–∫–∞ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏ –≤–Ω—É—Ç—Ä–∏ Emacs
(use-package shell
  :custom
  (shell-kill-buffer-on-exit t "–ó–∞–∫—Ä—ã—Ç—å –±—É—Ñ–µ—Ä, –µ—Å–ª–∏ —Ä–∞–±–æ—Ç–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞."))


;; üì¶ SIMPLE
;; –í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –ø–∞–∫–µ—Ç.
;; –†–∞–∑–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–∞—Ä–Ω—ã–º —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º —Ç–µ–∫—Å—Ç–∞.
(use-package simple
  :custom
  (backward-delete-char-untabify-method 'hungry "–£–¥–∞–ª—è—Ç—å –≤—Å–µ —Å–∏–º–≤–æ–ª—ã –≤—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏—è –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ [Backspace]")
  (blink-matching-paren t "–ú–∏–≥–∞—Ç—å, –∫–æ–≥–¥–∞ —Å–∫–æ–±–∫–∏ –ø–∞—Ä–Ω—ã–µ")
  (suggest-key-bindings t "–ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –ø–æ–¥—Å–∫–∞–∑–∫—É –∫–ª–∞–≤–∏–∞—Ç—É—Ä–Ω–æ–π –∫–æ–º–±–∏–Ω–∞—Ü–∏–∏ –¥–ª—è –∫–æ–º–∞–Ω–¥—ã")
  :config
  (progn
    (column-number-mode 1)      ;; –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –Ω–æ–º–µ—Ä –∫–æ–ª–æ–Ω–∫–∏ –≤ —Å—Ç–∞—Ç—É—Å–Ω–æ–π —Å—Ç—Ä–æ–∫–µ
    (line-number-mode t)        ;; –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –Ω–æ–º–µ—Ä —Å—Ç—Ä–æ–∫–∏ –≤ —Å—Ç–∞—Ç—É—Å–Ω–æ–π —Å—Ç—Ä–æ–∫–µ
    (overwrite-mode -1)         ;; –û—Ç–∫–ª—é—á–∏—Ç—å —Ä–µ–∂–∏–º –ø–µ—Ä–µ–∑–∞–ø–∏—Å–∏ —Ç–µ–∫—Å—Ç–∞
    (size-indication-mode nil)) ;; –û—Ç–æ–±—Ä–∞–∂–∞—Ç—å —Ä–∞–∑–º–µ—Ä –±—É—Ñ–µ—Ä–∞ –≤ —Å—Ç—Ä–æ–∫–µ —Å—Ç–∞—Ç—É—Å–∞
  :bind
  (:map global-map
    ("C-z" . undo)) ;; –û—Ç–º–µ–Ω–∞
  :hook
  (text-mode . visual-line-mode))


;; üì¶ TAB-BAR
;; –í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –ø–∞–∫–µ—Ç –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤–∫–ª–∞–¥–∫–∞–º–∏.
(when (fboundp 'tab-bar-mode)
  (use-package tab-bar
    :custom
    (tab-bar-show 1 "–ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –≤–∫–ª–∞–¥–∫–∏, –µ—Å–ª–∏ –∏—Ö –±–æ–ª—å—à–µ –æ–¥–Ω–æ–π.")
    (tab-bar-close-button-show nil "–ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –∫–Ω–æ–ø–∫—É –∑–∞–∫—Ä—ã—Ç–∏—è –≤–∫–ª–∞–¥–∫–∏.")
    :config
    (tab-bar-mode 1)))


;; üì¶ TOOLBAR
;; –í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –ø–∞–∫–µ—Ç, –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã–π –≤ Emacs NOX
(when (fboundp 'tool-bar-mode)
  (use-package tool-bar
    :custom
    (tool-bar-mode nil "–í—ã–∫–ª—é—á–∏—Ç—å –ø–∞–Ω–µ–ª—å –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤.")))


;; üì¶ TOOLTIP
;; –í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –ø–∞–∫–µ—Ç.
;; –í—ã–≤–æ–¥ –ø–æ–¥—Å–∫–∞–∑–æ–∫ –≤ –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–π —Å—Ä–µ–¥–µ.
(when (fboundp 'tooltip-mode)
  (use-package tooltip
    :config
    (tooltip-mode nil))) ;; –û—Ç–∫–ª—é—á–∏—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ GUI –¥–ª—è –≤—ã–≤–æ–¥–∞ –ø–æ–¥—Å–∫–∞–∑–æ–∫


;; üì¶ TRANSIENT
(use-package transient
  :ensure t
  :pin "gnu")


;; üì¶ TREESIT
;; –í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –ø–∞–∫–µ—Ç –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å TreeSitter
(use-package treesit
  :init
  (progn
    ;; –°–æ–∑–¥–∞–¥–∏–º –∫–∞—Ç–∞–ª–æ–≥ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è so-—Ñ–∞–π–ª–æ–≤ —Å –≥—Ä–∞–º–º–∞—Ç–∏–∫–∞–º–∏
    (defvar init-el-tree-sitter-dir (expand-file-name "tree-sitter" user-emacs-directory))
    (unless (file-directory-p init-el-tree-sitter-dir)
      (make-directory init-el-tree-sitter-dir))
    ;; –ì—Ä–∞–º–º–∞—Ç–∏–∫–∏
    (add-to-list 'treesit-language-source-alist '(asciidoc "https://github.com/cathaysia/tree-sitter-asciidoc.git" "v0.3.0" "tree-sitter-asciidoc/src/"))
    (add-to-list 'treesit-language-source-alist '(asciidoc-inline "https://github.com/cathaysia/tree-sitter-asciidoc.git" "v0.3.0" "tree-sitter-asciidoc_inline/src/"))
    (add-to-list 'treesit-language-source-alist '(bash "https://github.com/tree-sitter/tree-sitter-bash.git" "v0.23.3"))
    (add-to-list 'treesit-language-source-alist '(css "https://github.com/tree-sitter/tree-sitter-css.git" "v0.23.2"))
    (add-to-list 'treesit-language-source-alist '(dockerfile "https://github.com/camdencheek/tree-sitter-dockerfile.git" "v0.2.0" "src/"))
    (add-to-list 'treesit-language-source-alist '(hcl "https://github.com/tree-sitter-grammars/tree-sitter-hcl.git" "master" "src/"))
    (add-to-list 'treesit-language-source-alist '(html "https://github.com/tree-sitter/tree-sitter-html.git" "v0.23.2"))
    (add-to-list 'treesit-language-source-alist '(javascript "https://github.com/tree-sitter/tree-sitter-javascript.git" "v0.23.1"))
    (add-to-list 'treesit-language-source-alist '(json "https://github.com/tree-sitter/tree-sitter-json.git" "v0.24.8"))
    (add-to-list 'treesit-language-source-alist '(make "https://github.com/tree-sitter-grammars/tree-sitter-make.git" "v1.1.1" "src/"))
    (add-to-list 'treesit-language-source-alist '(markdown "https://github.com/tree-sitter-grammars/tree-sitter-markdown.git" "v0.3.2" "tree-sitter-markdown/src/"))
    (add-to-list 'treesit-language-source-alist '(markdown-inline "https://github.com/tree-sitter-grammars/tree-sitter-markdown.git" "v0.3.2" "tree-sitter-markdown-inline/src/"))
    (add-to-list 'treesit-language-source-alist '(python "https://github.com/tree-sitter/tree-sitter-python.git" "v0.23.6"))
    (add-to-list 'treesit-language-source-alist '(ruby "https://github.com/tree-sitter/tree-sitter-ruby.git" "v0.23.1"))
    (add-to-list 'treesit-language-source-alist '(rust "https://github.com/tree-sitter/tree-sitter-rust.git" "v0.23.2"))
    (add-to-list 'treesit-language-source-alist '(typescript "https://github.com/tree-sitter/tree-sitter-typescript" "master" "tsx/src"))
    (add-to-list 'treesit-language-source-alist '(xml "https://github.com/tree-sitter-grammars/tree-sitter-xml.git" "v0.7.0" "xml/src/"))
    (add-to-list 'treesit-language-source-alist '(yaml "https://github.com/tree-sitter-grammars/tree-sitter-yaml.git" "v0.7.0" "src/"))
    ;; –°–±–æ—Ä–∫–∞ –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –≥—Ä–∞–º–º–∞—Ç–∏–∫
    (unless (file-exists-p (expand-file-name "libtree-sitter-asciidoc.so" init-el-tree-sitter-dir))
      (treesit-install-language-grammar 'asciidoc init-el-tree-sitter-dir))
    (unless (file-exists-p (expand-file-name "libtree-sitter-asciidoc-inline.so" init-el-tree-sitter-dir))
      (treesit-install-language-grammar 'asciidoc-inline init-el-tree-sitter-dir))
    (unless (file-exists-p (expand-file-name "libtree-sitter-bash.so" init-el-tree-sitter-dir))
      (treesit-install-language-grammar 'bash init-el-tree-sitter-dir))
    (unless (file-exists-p (expand-file-name "libtree-sitter-css.so" init-el-tree-sitter-dir))
      (treesit-install-language-grammar 'css init-el-tree-sitter-dir))
    (unless (file-exists-p (expand-file-name "libtree-sitter-dockerfile.so" init-el-tree-sitter-dir))
      (treesit-install-language-grammar 'dockerfile init-el-tree-sitter-dir))
    (unless (file-exists-p (expand-file-name "libtree-sitter-javascript.so" init-el-tree-sitter-dir))
      (treesit-install-language-grammar 'javascript init-el-tree-sitter-dir))
    (unless (file-exists-p (expand-file-name "libtree-sitter-html.so" init-el-tree-sitter-dir))
      (treesit-install-language-grammar 'html init-el-tree-sitter-dir))
    (unless (file-exists-p (expand-file-name "libtree-sitter-json.so" init-el-tree-sitter-dir))
      (treesit-install-language-grammar 'json init-el-tree-sitter-dir))
    (unless (file-exists-p (expand-file-name "libtree-sitter-python.so" init-el-tree-sitter-dir))
      (treesit-install-language-grammar 'python init-el-tree-sitter-dir))
    (unless (file-exists-p (expand-file-name "libtree-sitter-ruby.so" init-el-tree-sitter-dir))
      (treesit-install-language-grammar 'ruby init-el-tree-sitter-dir))
    (unless (file-exists-p (expand-file-name "libtree-sitter-rust.so" init-el-tree-sitter-dir))
      (treesit-install-language-grammar 'rust init-el-tree-sitter-dir))
    (unless (file-exists-p (expand-file-name "libtree-sitter-yaml.so" init-el-tree-sitter-dir))
      (treesit-install-language-grammar 'yaml init-el-tree-sitter-dir))))


;; üì¶ UNIQUIFY
;; –í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –ø–∞–∫–µ—Ç.
;; –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏—è —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç–∏ –Ω–∞–∑–≤–∞–Ω–∏–π –±—É—Ñ–µ—Ä–æ–≤, –ø—É—Ç–µ–π –∏ —Ç. –¥.
(use-package uniquify
  :custom
  (uniquify-buffer-name-style 'forward "–ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –∫–∞—Ç–∞–ª–æ–≥ –ø–µ—Ä–µ–¥ –∏–º–µ–Ω–µ–º —Ñ–∞–π–ª–∞, –µ—Å–ª–∏ –±—É—Ñ–µ—Ä—ã –æ–¥–∏–Ω–∞–∫–æ–≤—ã–µ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –∏–º—è<–∫–∞—Ç–∞–ª–æ–≥>)")
  (uniquify-separator "/" "–†–∞–∑–¥–µ–ª—è—Ç—å –±—É—Ñ–µ—Ä—ã —Å –ø–æ—Ö–æ–∂–∏–º–∏ –∏–º–µ–Ω–∞–º–∏, –∏—Å–ø–æ–ª—å–∑—É—è /"))


;; üì¶ WHITESPACE MODE
;; –í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –ø–∞–∫–µ—Ç.
;; –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ–≤–∏–¥–∏–º—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤.
(use-package whitespace
  :custom
  (whitespace-display-mappings ;; –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ—á–∏—Ç–∞–µ–º—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤
   '((space-mark   ?\    [?\xB7]     [?.])        ;; –ü—Ä–æ–±–µ–ª
     (space-mark   ?\xA0 [?\xA4]     [?_])        ;; –ù–µ—Ä–∞–∑—Ä—ã–≤–Ω—ã–π –ø—Ä–æ–±–µ–ª
     (newline-mark ?\n   [?¬∂ ?\n]    [?$ ?\n])    ;; –ö–æ–Ω–µ—Ü —Å—Ç—Ä–æ–∫–∏
     (tab-mark     ?\t   [?\xBB ?\t] [?\\ ?\t]))) ;; TAB
  (whitespace-line-column 1000 "–ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –ø–æ–¥—Å–≤–µ—á–∏–≤–∞—é—Ç—Å—è –¥–ª–∏–Ω–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏. –ù–µ –Ω–∞–¥–æ —ç—Ç–æ–≥–æ –¥–µ–ª–∞—Ç—å.")
  :hook
  ((asciidoc-mode
    conf-mode
    css-ts-mode
    dockerfile-ts-mode
    emacs-lisp-mode
    html-ts-mode
    js-ts-mode
    json-ts-mode
    latex-mode
    lisp-data-mode
    makefile-gmake-mode
    makefile-mode
    markdown-mode
    nxml-mode
    org-mode
    po-mode
    python-ts-mode
    rst-mode
    ruby-ts-mode
    sh-mode
    snippet-mode ;; Yasnippet
    sql-mode
    terraform-mode
    tex-mode
    yaml-ts-mode) . whitespace-mode))


;; üì¶ WINDMOVE
;; –í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –ø–∞–∫–µ—Ç –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –æ–∫–æ–Ω.
;; –ü–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ –º–µ–∂–¥—É –æ–∫–Ω–∞–º–∏ Emacs.
(use-package windmove
  :config
  (progn
    (windmove-default-keybindings 'ctrl)
    (windmove-swap-states-default-keybindings 'meta)))


;; üì¶ WINNER-MODE
;; –í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –ø–∞–∫–µ—Ç –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è–º–∏ –æ–∫–æ–Ω.
;; https://www.gnu.org/software/emacs/manual/html_node/emacs/Window-Convenience.html
;; –î–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è–º–∏ –æ–∫–æ–Ω –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
;; [C-c <left>] –∏ [C-c <right>]
(use-package winner
  :config
  (winner-mode 1))


;; üì¶ WINDOW
;; –í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –ø–∞–∫–µ—Ç, –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞–º–∏ –æ–∫–æ–Ω
(use-package window
  :custom
  (window-resize-pixelwise t "–î–µ–ª–∏—Ç—å –æ–∫–Ω–∞ –ø–æ –ø–∏–∫—Å–µ–ª—è–º, –∞ –Ω–µ –ø–æ —Å–∏–º–≤–æ–ª–∞–º.")
  :bind
  (:map global-map
    ("C-S-<iso-lefttab>" . next-buffer) ;; [Ctrl+Tab]       –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –ø—Ä–µ–¥—ã–¥—É—â–∏–π –±—É—Ñ–µ—Ä
    ("C-<tab>" . previous-buffer)))     ;; [Ctrl+Shift+Tab] –°–ª–µ–¥—É—é—â–∏–π –±—É—Ñ–µ—Ä


;; üì¶ XML
;; –í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –ø–∞–∫–µ—Ç –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –¥–∏–∞–ª–µ–∫—Ç–∞–º–∏ XML
(use-package xml
  :custom
  (nxml-attribute-indent 4 "–í—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏–µ –∞—Ç—Ä–∏–±—É—Ç–æ–≤")
  (nxml-auto-insert-xml-declaration-flag nil "–ù–µ –≤—Å—Ç–∞–≤–ª—è—Ç—å –¥–µ–∫–ª–∞—Ä–∞—Ü–∏—é")
  (nxml-bind-meta-tab-to-complete-flag t "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å TAB –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –≤–≤–æ–¥–∞")
  (nxml-child-indent 4 "–í—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏–µ –¥–æ—á–µ—Ä–Ω–∏—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤")
  (nxml-slash-auto-complete-flag t "–ó–∞–∫—Ä—ã–≤–∞—Ç—å —Ç–µ–≥–∏ –ø–æ –≤–≤–æ–¥—É /")
  :mode
  (("\\.pom\\'" . nxml-mode)
   ("\\.xml\\'" . nxml-mode)))



;; üì¶ YAML-TS-MODE
;; –í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –ø–∞–∫–µ—Ç –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å YAML —á–µ—Ä–µ–∑ TreeSitter
(use-package yaml-ts-mode
  :mode
  (("\\.ansible\\-lint\\'" . yaml-ts-mode)
   ("\\.ansible\\-lint\\'" . yaml-ts-mode)
   ("\\.clang\\-tidy\\'" . yaml-ts-mode)
   ("\\.yamllint\\'" . yaml-ts-mode)
   ("\\.yfm\\'" . yaml-ts-mode)))


;;;;;; –ó–¥–µ—Å—å –∑–∞–∫–∞–Ω—á–∏–≤–∞—é—Ç—Å—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã—Ö –ø–∞–∫–µ—Ç–æ–≤ –∏ –Ω–∞—á–∏–Ω–∞—é—Ç—Å—è
;;;;;; –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–∞–∫–µ—Ç–æ–≤, –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö –æ—Ç —á–µ—Ä—Ç–µ–π –∏–∑ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞.


;; üì¶ DELIGHT
;; https://elpa.gnu.org/packages/delight.html
;; –ü–æ–∑–≤–æ–ª—è–µ—Ç —Å–ø—Ä—è—Ç–∞—Ç—å –∏–∑ –ø–∞–Ω–µ–ª–∏ —Å—Ç–∞—Ç—É—Å–∞ –ª–∏—à–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è —Ä–µ–∂–∏–º–æ–≤.
;; –≠—Ç–∏ —Å—Ç—Ä–æ–∫–∏ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –∑–¥–µ—Å—å –ø–æ—Ç–æ–º—É, —á—Ç–æ `use-package' –∞–∫—Ç–∏–≤–Ω–æ
;; –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —ç—Ç–æ–≥–æ –ø–∞–∫–µ—Ç–∞ –¥–∞–ª–µ–µ, –ø–æ—ç—Ç–æ–º—É –æ–Ω –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å
;; –∑–∞–≥—Ä—É–∂–µ–Ω –∫–∞–∫ –º–æ–∂–Ω–æ —Ä–∞–Ω—å—à–µ.
(use-package delight
  :ensure t
  :config
  (delight '((checkdoc-minor-mode)
             (treesit-mode " üå≥")
             (global-visual-line-mode)
             (global-whitespace-mode)
             (whitespace-mode " ¬∂"))))


;; üì¶ ADJUST-PARENS
;; https://elpa.gnu.org/packages/adjust-parens.html
;; –ü–∞–∫–µ—Ç –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–∫–æ–±–æ—á–∫–∞–º–∏ –∏ —É—Ä–æ–≤–Ω—è–º–∏ –æ—Ç—Å—Ç—É–ø–æ–≤.
(use-package adjust-parens
  :ensure t
  :hook (emacs-lisp-mode . adjust-parens-mode)
  :bind
  (:map emacs-lisp-mode-map
    ("<tab>" . lisp-indent-adjust-parens)
    ("<backtab>" . lisp-dedent-adjust-parens)))


;; üì¶ ASCIIDOC-MODE
(use-package asciidoc-mode
  :load-path "~/repo/asciidoc-mode/"
  :mode ("\\.adoc\\'" . asciidoc-mode))


;; üì¶ ALL
;; https://elpa.gnu.org/packages/all.html
;; –≠—Ç–æ –∞–Ω–∞–ª–æ–≥ `occur', —Ç–æ–ª—å–∫–æ –≤—Å–µ –Ω–∞–π–¥–µ–Ω–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏ –ø–æ–º–µ—â–∞—é—Ç—Å—è –≤ –æ—Ç–¥–µ–ª—å–Ω—ã–π –±—É—Ñ–µ—Ä,
;; –≥–¥–µ –∏—Ö –º–æ–∂–Ω–æ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å, –Ω–µ –ø—Ä—ã–≥–∞—è –ø–æ –≤—Å–µ–º—É –±—É—Ñ–µ—Ä—É. –ü–æ—Å–ª–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π
;; –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –Ω–∞–∂–∞—Ç—å C-c C-c, –∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è –æ—Ç—Ä–∞–∑—è—Ç—Å—è –≤ –æ—Å–Ω–æ–≤–Ω–æ–º –±—É—Ñ–µ—Ä–µ
(use-package all
  :ensure t)


;; üì¶ ANSIBLE
;; https://gitlab.com/emacs-ansible/emacs-ansible
;; –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å YAML-—Ñ–∞–π–ª–∞–º–∏ Ansible
(use-package ansible
  :ensure t
  :defer t)


;; üì¶ AVY
;; https://github.com/abo-abo/avy
;; –ú–Ω–æ–∂–µ—Å—Ç–≤–æ —Ñ—É–Ω–∫—Ü–∏–π –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ –Ω—É–∂–Ω–æ–π —Å—Ç—Ä–æ–∫–µ, —Å–ª–æ–≤—É, —Å–∏–º–≤–æ–ª—É –∏
;; —Ç–∞–∫ –¥–∞–ª–µ–µ.
(use-package avy
  :ensure t
  :delight ""
  :bind
  (:map global-map
        ("M-g f" . avy-goto-line)
        ("M-g w" . avy-goto-word)
        ("C-:" . avy-goto-char)))


;; üì¶ BBCODE-MODE
;; https://github.com/lassik/emacs-bbcode-mode
;; –†–µ–∂–∏–º —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è BB-–∫–æ–¥–æ–≤
(use-package bbcode-mode
  :ensure t
  :defer t)


;; üì¶ COLORFUL-MODE
;; https://github.com/DevelopmentCool2449/colorful-mode
;; –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ü–≤–µ—Ç–æ–≤ –ø—Ä—è–º–æ –≤ –±—É—Ñ–µ—Ä–µ. –ù–∞—Å–ª–µ–¥–Ω–∏–∫ `raibow-mode.el'.
(use-package colorful-mode
  :ensure t
  :hook ((css-ts-mode
          emacs-lisp-mode
          html-ts-mode
          json-ts-mode
          yaml-ts-mode) . colorful-mode))


;; üì¶ COMPANY-MODE
;; https://company-mode.github.io/
;; –ê–≤—Ç–æ–¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ
(use-package company
  :ensure t
  :delight ""
  :demand t
  :custom
  (company-idle-delay 0.5 "–ó–∞–¥–µ—Ä–∂–∫–∞ –≤—ã–≤–æ–¥–∞ –ø–æ–¥—Å–∫–∞–∑–∫–∏ ‚Äî –ø–æ–ª—Å–µ–∫—É–Ω–¥—ã")
  (company-minimum-prefix-length 2 "–ú–∏–Ω–∏–º—É–º 2 –∑–Ω–∞–∫–∞, —á—Ç–æ–±—ã company –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç–∞—Ç—å")
  (company-show-quick-access t "–ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –Ω–æ–º–µ—Ä–∞ –≤–æ–∑–ª–µ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã—Ö –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤")
  (company-tooltip-align-annotations t "–í—ã—Ä–æ–≤–Ω—è—Ç—å —Ç–µ–∫—Å—Ç –ø–æ–¥—Å–∫–∞–∑–∫–∏ –ø–æ –ø—Ä–∞–≤–æ–º—É –∫—Ä–∞—é")
  (company-tooltip-limit 15 "–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –Ω–∞ —á–∏—Å–ª–æ –ø–æ–¥—Å–∫–∞–∑–æ–∫")
  :hook
  ((asciidoc-mode
     css-ts-mode
     dockerfile-ts-mode
     emacs-lisp-mode
     html-ts-mode
     latex-mode
     lisp-data-mode
     minibufer-mode
     nxml-mode
     org-mode
     python-ts-mode
     rst-mode
     ruby-ts-mode) . company-mode)
  :bind
  (:map company-active-map
    ("TAB" . company-complete-common-or-cycle)
    ("M-/" . company-complete)
    ("M-." . company-show-location)))


;; üì¶ COUNSEL
;; https://elpa.gnu.org/packages/counsel.html
;; –ê–≤—Ç–æ–¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –Ω–∞ –æ—Å–Ω–æ–≤–µ Ivy
(use-package counsel
  :ensure t
  :pin "gnu"
  :bind
  (:map global-map
        ("C-c c" . counsel-compile)
        ("C-c g" . counsel-git)
        ("C-h f" . counsel-describe-function)
        ("C-h l" . counsel-find-library)
        ("C-h v" . counsel-describe-variable)
        ("C-x 8 RET" . counsel-unicode-char)
        ("C-x C-f" . counsel-find-file)
        ("M-x" . counsel-M-x)
        ("M-y" . counsel-yank-pop)))


;; üì¶ CSV-MODE
;; https://elpa.gnu.org/packages/csv-mode.html
;; –ü–æ–¥–¥–µ—Ä–∂–∫–∞ CSV
(use-package csv-mode
  :ensure t)


;; üì¶ DENOTE
;; https://protesilaos.com/emacs/denote
;; –†–µ–∂–∏–º –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–º–µ—Ç–∫–∞–º–∏
(use-package denote
  :ensure t
  :custom
  (denote-directory (expand-file-name "~/Notes/") "–ö–∞—Ç–∞–ª–æ–≥ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∑–∞–º–µ—Ç–æ–∫."))


;; üì¶ EDIT-INDIRECT
;; https://github.com/Fanael/edit-indirect
;; –ü–æ–∑–≤–æ–ª—è–µ—Ç —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –≤—ã–¥–µ–ª–µ–Ω–Ω—ã–π —Ä–µ–≥–∏–æ–Ω –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –±—É—Ñ–µ—Ä–µ.
;; –≠—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø–æ–ª–µ–∑–Ω–æ –≤ —Ç–æ–º —Å–ª—É—á–∞–µ, –∫–æ–≥–¥–∞, –Ω–∞–ø—Ä–∏–º–µ—Ä, –Ω—É–∂–Ω–æ
;; –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º—ã, –≤—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–π –∫–∞–∫ –ø—Ä–∏–º–µ—Ä –≤ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é.
;; –°–∞–º–∞—è –ø–æ–ª–µ–∑–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ ‚Äî edit-indirect-region:
;; 1. –í—ã–¥–µ–ª—è–µ–º –æ–±–ª–∞—Å—Ç—å.
;; 2. –ù–∞–∂–∏–º–∞–µ–º [C-c '].
;; 3. –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º.
;; 4. –ù–∞–∂–∏–º–∞–µ–º [C-c], —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –æ—Å–Ω–æ–≤–Ω–æ–π –±—É—Ñ–µ—Ä –∏ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è,
;; –ª–∏–±–æ [C-c C-k], —á—Ç–æ–±—ã –æ—Ç–º–µ–Ω–∏—Ç—å –ø—Ä–∞–≤–∫–∏.
(use-package edit-indirect
  :ensure t
  :bind (:map global-map
              ("C-c '" . edit-indirect-region)))


;; üì¶ EDITORCONFIG
;; –ü–æ–¥–¥–µ—Ä–∂–∫–∞ https://editorconfig.org/
;; https://github.com/editorconfig/editorconfig-emacs
(use-package editorconfig
  :ensure t
  :delight ""
  :config
  (editorconfig-mode 1))


;; üì¶ EF-THEMES
;; https://github.com/protesilaos/ef-themes.git
(use-package ef-themes
  :ensure t)


;; üì¶ EGLOT
;; –ü–∞–∫–µ—Ç –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏ LSP.
;; https://elpa.gnu.org/packages/eglot.html
;;
;; –ü–û–î–ì–û–¢–û–í–ö–ê –ö –†–ê–ë–û–¢–ï
;; –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–µ—Ä–æ–≤:
;; - Ansible:    sudo npm -g install @ansible/ansible-language-server
;; - Dockerfile: sudo npm -g install dockerfile-language-server-nodejs
;; - HTML:       sudo npm -g install vscode-langservers-extracted
;; - Markdown:   sudo snap install marksman
;; - Python:     pip3 install jedi-language-server
;; - ReST        pip3 install esbonio
;;               –°–æ–∑–¥–∞—Ç—å –≤ –∫–æ—Ä–Ω–µ –ø—Ä–æ–µ–∫—Ç–∞ —Ñ–∞–π–ª .dir-locals.el –∏ –∑–∞–¥–∞—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ
;;               –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π `eglot-workspace-configuration'.
;; - YAML:       sudo npm -g install yaml-language-server
(use-package eglot
  :ensure t
  :pin "gnu"
  :defer t
  :custom
  (eglot-events-buffer-config '(
                                 :size 0 ;; –í—ã–∫–ª—é—á–∏—Ç—å –≤–µ–¥–µ–Ω–∏–µ –±—É—Ñ–µ—Ä–∞ —Å–æ–±—ã—Ç–∏–π
                                 :format 'lisp ;; –§–æ—Ä–º–∞—Ç Lisp –¥–ª—è –ª–æ–≥–æ–≤
                                 )
    "–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±—É—Ñ–µ—Ä–∞ —Å–æ–±—ã—Ç–∏–π Eglot")
  :config
  (progn
    (add-to-list 'eglot-server-programs '(ansible-mode . ("ansible-language-server" "--stdio")))
    (add-to-list 'eglot-server-programs '(dockerfile-ts-mode . ("docker-langserver" "--stdio")))
    (add-to-list 'eglot-server-programs '(markdown-mode . ("marksman")))
    (add-to-list 'eglot-server-programs '(python-mode . ("jedi-language-server")))
    (add-to-list 'eglot-server-programs '(ruby-ts-mode . ("bundle" "exec" "rubocop" "--lsp")))
    (add-to-list 'eglot-server-programs '(yaml-ts-mode . ("yaml-language-server" "--stdio"))))
  :bind
  (:map eglot-mode-map
    ("C-c C-d" . eldoc)
    ("C-c C-r" . eglot-rename)
    ("C-c C-f" . eglot-format-buffer))
  :hook
  ((ansible-mode
    dockerfile-ts-mode
    markdown-mode
    python-ts-mode
    ruby-ts-mode
    yaml-ts-mode
   ) . eglot-ensure))


;; üì¶ ELDOC-MODE
;; https://www.gnu.org/software/emacs/manual/html_node/emacs/Programming-Language-Doc.html
;; –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–æ–¥—Å–∫–∞–∑–æ–∫ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å Emacs Lisp
(use-package eldoc
  :config
  (global-eldoc-mode nil)
  :delight ""
  :hook (emacs-lisp-mode . eldoc-mode))


;; üì¶ ENVRC
;; https://github.com/purcell/envrc
;; –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ `.envrc'.
(use-package envrc
  :ensure t
  :hook (after-init . envrc-global-mode))


;; üì¶ FLYCHECK
;; https://www.flycheck.org/
;; –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞ –Ω–∞ –ª–µ—Ç—É —Å –ø–æ–º–æ—â—å—é —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä–æ–≤
(use-package flycheck
  :ensure t
  :custom
  (flycheck-check-syntax-automatically '(mode-enabled save new-line))
  (flycheck-highlighting-mode 'lines "–°—Ç–∏–ª—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º–Ω—ã—Ö –º–µ—Å—Ç ‚Äî –≤—Å—è —Å—Ç—Ä–æ–∫–∞")
  (flycheck-indication-mode 'left-fringe "–ú–µ—Å—Ç–æ —Ä–∞–∑–º–µ—â–µ–Ω–∏—è –º–∞—Ä–∫–µ—Ä–∞ –æ—à–∏–±–∫–∏ ‚Äî –ª–µ–≤–∞—è –≥—Ä–∞–Ω–∏—Ü–∞")
  ;; (flycheck-locate-config-file-functions '(flycheck-locate-config-file-by-path
  ;;                                          flycheck-locate-config-file-ancestor-directories
  ;;                                          flycheck-locate-config-file-home))
  (flycheck-markdown-markdownlint-cli-config "~/.emacs.d/.markdownlintrc" "–§–∞–π–ª –Ω–∞—Å—Ç—Ä–æ–µ–∫ Markdownlint")
  (flycheck-sphinx-warn-on-missing-references t "–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–∞—Ç—å –æ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã—Ö —Å—Å—ã–ª–∫–∞—Ö –≤ Sphinx")
  (flycheck-textlint-config ".textlintrc.yaml" "–§–∞–π–ª –Ω–∞—Å—Ç—Ä–æ–µ–∫ Textlint")
  :hook
  ((asciidoc-mode
    conf-mode
    css-ts-mode
    dockerfile-ts-mode
    emacs-lisp-mode
    html-ts-mode
    js-ts-mode
    json-ts-mode
    latex-mode
    lisp-data-mode
    makefile-mode
    markdown-mode
    nxml-mode
    python-ts-mode
    rst-mode
    ruby-ts-mode
    sh-mode
    sql-mode
    terraform-mode
    yaml-ts-mode
    ) . flycheck-mode))


;; üì¶ FLYCHECK-EGLOT
;; https://github.com/flycheck/flycheck-eglot
;; –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è Flycheck —Å Eglot
(use-package flycheck-eglot
  :ensure t
  :after (flycheck eglot)
  :config
  (global-flycheck-eglot-mode 1))


;; üì¶ FORMAT-ALL
;; https://github.com/lassik/emacs-format-all-the-code
;; –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–¥–∞ —Å –ø–æ–º–æ—â—å—é —Ä–∞–∑–Ω—ã—Ö –≤–Ω–µ—à–Ω–∏—Ö —Å—Ä–µ–¥—Å—Ç–≤.
(use-package format-all
  :ensure t
  :defer t
  :bind
  (:map global-map
    ([f12] . format-all-buffer)))


;; üì¶ HL-TODO
;; https://github.com/tarsius/hl-todo
;; –ü–æ–¥—Å–≤–µ—Ç–∫–∞ TODO, FIXME –∏ —Ç. –ø.
(use-package hl-todo
  :ensure t
  :config (global-hl-todo-mode t))


;; üì¶ HYPERBOLE
;; https://www.gnu.org/software/hyperbole/
;; –†–∞—Å–ø–æ–∑–Ω–∞—ë—Ç —Ç–µ–∫—Å—Ç –≤ –±—É—Ñ–µ—Ä–∞—Ö –∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–µ–≤—Ä–∞—â–∞–µ—Ç –≤ –∫–Ω–æ–ø–∫–∏ –∏ —Å—Å—ã–ª–∫–∏.
(use-package hyperbole
  :ensure t
  :pin "gnu"
  :delight ""
  :hook
  ((emacs-lisp-mode
    markdown-mode
    rst-mode
    text-mode) . hyperbole-mode))


;; üì¶ INDENT-BARS
;; https://github.com/jdtsmith/indent-bars
;; –ö—Ä–∞—Å–∏–≤–∞—è –ø–æ–¥—Å–≤–µ—Ç–∫–∞ –æ—Ç—Å—Ç—É–ø–æ–≤
(use-package indent-bars
  :ensure t
  :hook
  ((emacs-lisp-mode
    js-ts-mode
    makefile-mode
    markdown-mode
    python-ts-mode
    rst-mode
    ruby-ts-mode
    yaml-ts-mode
    ) . indent-bars-mode))


;; üì¶ IVY
;; https://elpa.gnu.org/packages/ivy.html
;; https://elpa.gnu.org/packages/doc/ivy.html
;; –§—É–Ω–∫—Ü–∏–∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –∏ –≤—ã–±–æ—Ä–∞ —ç–ª–µ–º–µ–Ω—Ç–æ–≤. –ö–∞–∫ Helm, –Ω–æ —Ç–µ–ø–µ—Ä—å –≤ GNU ELPA.
;; –ü—Ä–∏ –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏–∏ —Ñ–∞–π–ª–æ–≤ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å `ivy-immediate-done',
;; —ç—Ç–æ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å [C-M-j].
(use-package ivy
  :ensure t
  :demand t
  :delight 'ivy-mode
  :config
  (ivy-mode 1)
  :bind
  (:map global-map
        ("C-x b" . ivy-switch-buffer)
        ("C-c v" . ivy-push-view)
        ("C-c V" . ivy-pop-view)))


;; üì¶ IVY-HYDRA
;; https://elpa.gnu.org/packages/ivy-hydra.html
;; –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Å–æ—á–µ—Ç–∞–Ω–∏—è –∫–ª–∞–≤–∏—à –¥–ª—è IVY.
(use-package ivy-hydra
  :ensure t
  :demand t
  :after ivy
  :requires ivy)


;; üì¶ JINX
;; https://github.com/minad/jinx
;; –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ä—Ñ–æ–≥—Ä–∞—Ñ–∏–∏ –Ω–µ —Ç–æ–ª—å–∫–æ –¥–ª—è —Å–ª–æ–≤–∞ –ø–æ–¥ –∫—É—Ä—Å–æ—Ä–æ–º, –∫–∞–∫ –≤–æ `flyspell',
;; –∞ –≤–æ–æ–±—â–µ –≤–æ –≤—Å—ë–º –±—É—Ñ–µ—Ä–µ.
;; –í Debian —Ç—Ä–µ–±—É–µ—Ç –¥–ª—è —Ä–∞–±–æ—Ç—ã –ø–∞–∫–µ—Ç—ã `libenchant2-dev' –∏ `pkgconf'.
(use-package jinx
  :ensure t
  :pin "gnu"
  :custom
  (jinx-languages "ru_RU en_US")
  :hook ((emacs-lisp-mode
          text-mode) . jinx-mode)
  :bind
  (:map global-map
        ("M-$" . jinx-correct)
        ("C-M-$" . jinx-languages)
        ("M-n" . jinx-next)
        ("M-p" . jinx-previous)))


;; üì¶ LIN
;; https://github.com/protesilaos/lin
;; –ü–æ—á—Ç–∏ —Ç–æ –∂–µ —Å–∞–º–æ–µ, —á—Ç–æ –∏ `hl-line-mode', —Ç–æ–ª—å–∫–æ –ª—É—á—à–µ.
;; TODO: –≤ —á—ë–º –∏–º–µ–Ω–Ω–æ?
(use-package lin
  :ensure t
  :config
  (lin-global-mode 1))


;; üì¶ MAGIT
;; https://magit.vc/
;; Magic + Git + Diff-HL.
;; –õ—É—á—à–µ–µ —Å—Ä–µ–¥—Å—Ç–≤–æ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å Git.
(use-package magit
  :ensure t
  :pin "melpa-stable"
  :custom
  (magit-define-global-key-bindings 'default "–í–∫–ª—é—á–∏—Ç—å –≥–ª–æ–±–∞–ª—å–Ω—ã–µ —Å–æ—á–µ—Ç–∞–Ω–∏—è Magit.")
  :hook
  (magit-mode . magit-auto-revert-mode)
  (after-save . magit-after-save-refresh-status)
  (after-save . magit-after-save-refresh-buffers))


;; üì¶ DIFF-HL
;; https://github.com/dgutov/diff-hl
;; –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–µ–±–æ–ª—å—à–∏–µ –º–∞—Ä–∫–µ—Ä—ã —Ä—è–¥–æ–º —Å –Ω–µ–∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏. –î–æ–ø–æ–ª–Ω—è–µ—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å git-gutter,
;; –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ç–æ–ª—å–∫–æ –≤ –æ–±—ã—á–Ω—ã—Ö –±—É—Ñ–µ—Ä–∞—Ö. –≠—Ç–æ—Ç –ø–∞–∫–µ—Ç —É–º–µ–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å —Å dired –∏ –¥—Ä—É–≥–∏–º–∏ —Ä–µ–∂–∏–º–∞–º–∏.
(use-package diff-hl
  :ensure t
  :pin "gnu"
  :hook
  ((asciidoc-mode
    emacs-lisp-mode
    makefile-mode
    markdown-mode
    python-ts-mode
    rst-mode
    yaml-ts-mode). diff-hl-mode)
  ((dired-mode . diff-hl-dired-mode)))


;; üì¶ MARKDOWN MODE
;; https://github.com/jrblevin/markdown-mode
;; –†–µ–∂–∏–º –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ñ–∞–π–ª–∞–º–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ Markdown
(use-package markdown-mode
  :ensure t
  :defer t
  :custom
  (markdown-fontify-code-blocks-natively t "–ü–æ–¥—Å–≤–µ—á–∏–≤–∞—Ç—å —Å–∏–Ω—Ç–∞–∫—Å–∏—Å –≤ –ø—Ä–∏–º–µ—Ä–∞—Ö –∫–æ–¥–∞")
  (markdown-header-scaling-values '(1.0 1.0 1.0 1.0 1.0 1.0) "–í—Å–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏ –æ–¥–Ω–æ–π –≤—ã—Å–æ—Ç—ã")
  (markdown-list-indent-width 4 "–†–∞–∑–º–µ—Ä –æ—Ç—Å—Ç—É–ø–∞ –¥–ª—è –≤—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏—è –≤–ª–æ–∂–µ–Ω–Ω—ã—Ö —Å–ø–∏—Å–∫–æ–≤")
  :config (setq-local word-wrap t)
  :bind (:map markdown-mode-map
          ("M-." . markdown-follow-thing-at-point)))


;; üì¶ MODUS-THEMES
;; https://www.gnu.org/software/emacs/manual/html_node/modus-themes/index.html
(use-package modus-themes
  :ensure t)


;; üì¶ MULTIPLE CURSORS
;; https://github.com/magnars/multiple-cursors.el
;; –ü–æ–∑–≤–æ–ª—è–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –º—É–ª—å—Ç–∏–∫—É—Ä—Å–æ—Ä–Ω–æ—Å—Ç—å.
(use-package multiple-cursors
  :ensure t
  :custom (mc/always-run-for-all t "–ù–µ –∑–∞–¥–∞–≤–∞—Ç—å –ª–∏—à–Ω–∏—Ö –≤–æ–ø—Ä–æ—Å–æ–≤.")
  :init
  (keymap-global-unset "M-<down-mouse-1>")
  :bind
  (:map global-map
    ("C-S-c C-S-c" . mc/edit-lines)
    ("C->" . mc/mark-next-like-this)
    ("C-<" . mc/mark-previous-like-this)
    ("C-c C-<" . mc/mark-all-like-this)
    ("M-<mouse-1>" . mc/add-cursor-on-click)))


;; üì¶ NERD-ICONS
;; https://github.com/rainstormstudio/nerd-icons.el
;; –¢—Ä–µ–±—É–µ—Ç—Å—è –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π —Ä–∞–±–æ—Ç—ã `doom-modeline'.
;; –ù–∞—á–∏–Ω–∞—è —Å –≤–µ—Ä—Å–∏–∏ 4.0.0 –ø–∞–∫–µ—Ç `all-the-icons' –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è.
;;
;; –î–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å–∞–º–∏—Ö —à—Ä–∏—Ñ—Ç–æ–≤ —Å–ª–µ–¥—É–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—É `nerd-icons-install-fonts'.
;; –í Debian Linux —à—Ä–∏—Ñ—Ç—ã –±—É–¥—É—Ç –∑–∞–≥—Ä—É–∂–µ–Ω—ã –≤ –∫–∞—Ç–∞–ª–æ–≥ `~/.local/share/fonts'. –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è
;; —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –∏—Ö –≤ `/usr/local/share/fonts/'.
(use-package nerd-icons
  :ensure t
  :delight ""
  :custom
  (nerd-icons-color-icons t "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ü–≤–µ—Ç–Ω—ã–µ –∏–∫–æ–Ω–∫–∏."))


;; üì¶ NERD-ICONS-DIRED
;; https://github.com/rainstormstudio/nerd-icons-dired
;; –ò–∫–æ–Ω–∫–∏ –≤ `dired'.
(use-package nerd-icons-dired
  :ensure t
  :delight ""
  :after (dired nerd-icons)
  :hook (dired-mode . nerd-icons-dired-mode))


;; üì¶ NERD-ICONS-IBUFFER
;; https://github.com/seagle0128/nerd-icons-ibuffer
;; –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∫–æ–Ω–æ–∫ –≤ ibuffer
(use-package nerd-icons-ibuffer
  :ensure t
  :after (ibuffer nerd-icons)
  :hook (ibuffer-mode . nerd-icons-ibuffer-mode))


;; üì¶ ORG-MODE
;; https://orgmode.org/
;; –û—Ä–≥–∞–Ω–∞–π–∑–µ—Ä, –∑–∞–º–µ—Ç–∫–∏ –∏ —Ç–∞–∫ –¥–∞–ª–µ–µ
(use-package org
  :defer t
  :ensure t
  :config
  (setq-local
   truncate-lines nil ;; –ù–µ –æ–±—Ä–µ–∑–∞—Ç—å —Å—Ç—Ä–æ–∫–∏
   word-wrap t))      ;; –ü–µ—Ä–µ–Ω–æ—Å –¥–ª–∏–Ω–Ω—ã—Ö —Å—Ç—Ä–æ–∫


;; üì¶ PACKAGE-LINT
;; https://github.com/purcell/package-lint
;; –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–¥–∞ –ø–∞–∫–µ—Ç–æ–≤ Emacs.
(use-package package-lint
  :ensure t
  :defer t)


;; üì¶ PLANTUML-MODE
;; https://github.com/skuro/plantuml-mode
;; –ü–∞–∫–µ—Ç –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å PlantUML
(use-package plantuml-mode
  :ensure t)


;; üì¶ PO-MODE
;; https://www.gnu.org/software/gettext/manual/html_node/Installation.html
;; –†–∞–±–æ—Ç–∞ —Å —Ñ–∞–π–ª–∞–º–∏ –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏–∏.
;; –ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤ —Å–∏—Å—Ç–µ–º—É —ç—Ç–∏ –ø–∞–∫–µ—Ç—ã:
;; * gettext
;; * gettext-el: –µ—Å–ª–∏ po-mode –∏–∑ –∞—Ä—Ö–∏–≤–æ–≤ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç
(use-package po-mode
  :pin "melpa"
  :ensure t)


;; üì¶ PROJECTILE
;; https://docs.projectile.mx/projectile/installation.html
;; –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞–º–∏. –ß—Ç–æ–±—ã –∫–∞—Ç–∞–ª–æ–≥ —Å—á–∏—Ç–∞–ª—Å—è –ø—Ä–æ–µ–∫—Ç–æ–º, –æ–Ω –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å
;; –ø–æ–¥ –∫–æ–Ω—Ç—Ä–æ–ª–µ–º –ª—é–±–æ–π —Å–∏—Å—Ç–µ–º—ã –≤–µ—Ä—Å–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è, –ª–∏–±–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ
;; —Ñ–∞–π–ª—ã. –í –∫—Ä–∞–π–Ω–µ–º —Å–ª—É—á–∞–µ —Å–≥–æ–¥–∏—Ç—Å—è –ø—É—Å—Ç–æ–π —Ñ–∞–π–ª .projectile
;; –ü–æ–¥—Ä–æ–±–Ω–µ–µ –∑–¥–µ—Å—å: https://docs.projectile.mx/projectile/projects.html
(use-package projectile
  :ensure t
  :delight ""
  :bind-keymap
  ("C-x p" . projectile-command-map)
  ("C-c p" . projectile-command-map)
  :bind
  ("<f5>" . projectile-compile-project)
  :init
  (progn
    (add-to-list 'safe-local-variable-values '(projectile-project-compilation-cmd . "make dirhtml"))
    (add-to-list 'safe-local-variable-values '(projectile-project-test-cmd . "pre-commit run --all")))
  :custom
  (projectile-completion-system 'ivy)
  :config
  (projectile-mode 1))


;; üì¶ PULSAR
;; –í—Å–ø—ã—Ö–∏–≤–∞–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏, –∫ –∫–æ—Ç–æ—Ä–æ–π –ø–µ—Ä–µ–º–µ—Å—Ç–∏–ª—Å—è –∫—É—Ä—Å–æ—Ä
;; https://github.com/protesilaos/pulsar
;; –≠—Ç–æ—Ç –ø–∞–∫–µ—Ç —Ç—Ä–µ–±—É–µ—Ç Emacs –≤–µ—Ä—Å–∏–∏ 27.1 –∏–ª–∏ –Ω–æ–≤–µ–µ
(use-package pulsar
  :ensure t
  :custom
  (pulsar-pulse t)
  :config
  (progn
    (add-hook 'after-init-hook 'pulsar-global-mode)
    (add-hook 'next-error-hook 'pulsar-pulse-line)
    (add-to-list 'pulsar-pulse-functions 'flycheck-next-error)
    (add-to-list 'pulsar-pulse-functions 'flyspell-goto-next-error)
    (add-to-list 'pulsar-pulse-functions 'recenter-top-bottom)))


;; üì¶ PYTHON-TS-MODE
;; –í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –ø–∞–∫–µ—Ç –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å Python —á–µ—Ä–µ–∑ TreeSitter
(use-package python
  :ensure t
  :custom
  (py-pylint-command-args "--max-line-length 120" "–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã, –ø–µ—Ä–µ–¥–∞–≤–∞–µ–º—ã–µ pylint")
  (python-indent-guess-indent-offset-verbose nil "–í—ã–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è")
  (python-indent-offset 4 "–û—Ç—Å—É–ø –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é ‚Äî 4 –ø—Ä–æ–±–µ–ª–∞"))


;; üì¶ RAINBOW-DELIMITERS-MODE
;; https://github.com/Fanael/rainbow-delimiters
;; –ü–æ–¥—Å–≤–µ—Ç–∫–∞ –ø–∞—Ä–Ω—ã—Ö —Å–∫–æ–±–æ–∫ –æ–¥–Ω–∏–º –∏ —Ç–µ–º –∂–µ —Ü–≤–µ—Ç–æ–º
(use-package rainbow-delimiters
  :ensure t
  :delight ""
  :hook
  ((asciidoc-mode
    conf-mode
    css-ts-mode
    emacs-lisp-mode
    lisp-data-mode
    makefile-gmake-mode
    makefile-mode
    markdown-mode
    nxml-mode
    org-mode
    python-ts-mode
    rst-mode
    sh-mode
    sql-mode
    terraform-mode
    yaml-ts-mode
    ) . rainbow-delimiters-mode))


;; üì¶ RUSSIAN-TECHWRITER
;; –ú–µ—Ç–æ–¥ –≤–≤–æ–¥–∞ –¥–ª—è —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö –ø–∏—Å–∞—Ç–µ–ª–µ–π.
;; –í –æ—Ç–ª–∏—á–∏–µ –æ—Ç russian-computer, –ø–æ–∑–≤–æ–ª—è–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ª–∏–≥–∞—Ç—É—Ä—ã.
;; https://github.com/dunmaksim/emacs-russian-techwriter-input-method
(use-package russian-techwriter
  :ensure t
  :config
  (customize-set-variable 'default-input-method 'russian-techwriter))


;; üì¶ SWIPER
;; https://elpa.gnu.org/packages/swiper.html
;; –£–º–Ω—ã–π –ø–æ–∏—Å–∫ –∏ –æ—Ç–ª–∏—á–Ω–∞—è (–≤ –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö —Å–ª—É—á–∞—è—Ö) –∑–∞–º–µ–Ω–∞ `isearch-forward' –∏
;; `isearch-backward'.
(use-package swiper
  :ensure t
  :pin "gnu"
  :bind
  (:map global-map
    ("C-s" . swiper-isearch)
    ("C-r" . swiper-isearch-backward)))


;; üì¶ TERRAFORM-MODE
;; https://github.com/hcl-emacs/terraform-mode
;; –†–∞–±–æ—Ç–∞ —Å —Ñ–∞–π–ª–∞–º–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Terraform –∏ OpenTofu
(use-package terraform-mode
  :ensure t
  :defer t
  :mode
  ("\\.terraformrc\\'"
   "\\.tofurc\\'"
   "tofu\\.rc\\'"))


;; üì¶ WHICH-KEY MODE
;; https://elpa.gnu.org/packages/which-key.html
;; –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–æ–¥—Å–∫–∞–∑–∫–∏ –∫ —Å–æ—á–µ—Ç–∞–Ω–∏—è–º –∫–ª–∞–≤–∏—à.
(use-package which-key
  :ensure t
  :delight ""
  :custom
  (which-key-computer-remaps t "–í—ã–≤–æ–¥–∏—Ç—å –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ —Å–æ—á–µ—Ç–∞–Ω–∏—è –∫–ª–∞–≤–∏—à, –∞ –Ω–µ ¬´–∫–∞–∫ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å¬ª")
  (which-key-dont-use-unicode nil "–ò—Å–ø–æ–ª—å–∑—É–µ–º Unicode")
  (which-key-idle-delay 2 "–ó–∞–¥–µ—Ä–∂–∫–∞ –ø–æ—è–≤–ª–µ–Ω–∏—è –ø–æ–¥—Å–∫–∞–∑–∫–∏")
  (which-key-idle-secondary-delay 0.05 "–ï—â—ë –æ–¥–Ω–∞ –∑–∞–¥–µ—Ä–∂–∫–∞ –ø–æ—è–≤–ª–µ–Ω–∏—è –ø–æ–¥—Å–∫–∞–∑–∫–∏")
  (which-key-show-major-mode t "–¢–æ –∂–µ —Å–∞–º–æ–µ —á—Ç–æ –∏ [C-h m], –Ω–æ –≤ —Ñ–æ—Ä–º–∞—Ç–µ which-key")
  :config
  (progn
    (which-key-mode 1)
    (which-key-setup-minibuffer)
    (which-key-setup-side-window-right))) ;; –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –ø–æ–¥—Å–∫–∞–∑–∫–∏ —Å–ø—Ä–∞–≤–∞


;; üì¶ YASNIPPET
;; https://elpa.gnu.org/packages/yasnippet.html
;; –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–Ω–∏–ø–ø–µ—Ç–∞–º–∏. –¢—Ä–µ–±—É–µ—Ç—Å—è –¥–ª—è —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–π Eglot.
(use-package yasnippet
  :ensure t
  :init
  (progn
    ;; –°–æ–∑–¥–∞—Ç—å –∫–∞—Ç–∞–ª–æ–≥ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–Ω–∏–ø–ø–µ—Ç–æ–≤, –∏–Ω–∞—á–µ –±—É–¥–µ—Ç –æ—à–∏–±–∫–∞
    (defvar init-el-yasnippet-snippets-dir (expand-file-name "snippets" user-emacs-directory))
    (unless (file-directory-p init-el-yasnippet-snippets-dir)
      (make-directory init-el-yasnippet-snippets-dir)))
  :config (yas-global-mode 1))


;; üì¶ YASNIPPET-SNIPPETS
;; https://github.com/AndreaCrotti/yasnippet-snippets
;; –ù–∞–±–æ—Ä —Å–Ω–∏–ø–ø–µ—Ç–æ–≤ –¥–ª—è `yasnippet'
(use-package yasnippet-snippets
  :ensure t)


(put 'downcase-region 'disabled nil)
(put 'upcase-region 'disabled nil)
(load-theme 'ef-autumn t)

(when (file-exists-p custom-file)
  (load custom-file))

(provide 'init.el)
;;; init.el ends here
